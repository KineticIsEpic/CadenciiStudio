<?xml version="1.0"?>
<doc>
    <assembly>
        <name>cadencii.vsq</name>
    </assembly>
    <members>
        <member name="T:cadencii.vsq.BPPair">
            <summary>
            ゲートタイムと、何らかのパラメータ値とのペアを表します。主にVsqBPListで使用します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.BPPair.compareTo(cadencii.vsq.BPPair)">
            <summary>
            このインスタンスと、指定したオブジェクトを比較します
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.BPPair.#ctor(System.Int32,System.Int32)">
            <summary>
            指定されたゲートタイムとパラメータ値を使って、新しいインスタンスを初期化します。
            </summary>
            <param name="clock_"></param>
            <param name="value_"></param>
        </member>
        <member name="T:cadencii.vsq.DynamicsMode">
            <summary>
            VOCALOID1における、ダイナミクスモードを表す定数を格納するためのクラスです。
            </summary>
        </member>
        <member name="F:cadencii.vsq.DynamicsMode.Standard">
            <summary>
            デフォルトのダイナミクスモードです。DYNカーブが非表示になるモードです。
            </summary>
        </member>
        <member name="F:cadencii.vsq.DynamicsMode.Expert">
            <summary>
            エキスパートモードです。DYNカーブが表示されます。
            </summary>
        </member>
        <member name="T:cadencii.vsq.IconDynamicsHandle">
            <summary>
            強弱記号設定を表します。
            </summary>
        </member>
        <member name="T:cadencii.vsq.IconParameter">
            <summary>
            アイコン設定ファイルである*.AICファイルを読み取ることで作成されるアイコン設定を表します。
            アイコン設定ファイルを使用するIconDynamicsHandle、NoteHeadHandle、およびVibratoHandleの基底クラスとなっています。
            <see cref="T:org.kbinani.vsq.IconDynamicsHandle"/>
            <see cref="T:org.kbinani.vsq.NoteHeadHandle"/>
            <see cref="T:org.kbinani.vsq.VibratoHandle"/>
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.articulation">
            <summary>
            アイコン設定の種類
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.button">
            <summary>
            アイコンのボタンに使用される画像ファイルへの相対パス
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.caption">
            <summary>
            キャプション
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.length">
            <summary>
            ゲートタイム長さ
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.startDepth">
            <summary>
            ビブラート深さの開始値
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.endDepth">
            <summary>
            ビブラート深さの終了値
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.startRate">
            <summary>
            ビブラート速さの開始値
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.endRate">
            <summary>
            ビブラート速さの終了値
            </summary>
        </member>
        <member name="M:cadencii.vsq.IconParameter.getBPListFromText(System.String,System.String,System.String)">
            <summary>
            テキストデータからVibratoBPListを構築する
            </summary>
            <param name="strNum"></param>
            <param name="strBPX"></param>
            <param name="strBPY"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.IconParameter.ArticulationType">
            <summary>
            アイコン設定の種類を表します。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.ArticulationType.Vibrato">
            <summary>
            ビブラート
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.ArticulationType.Crescendo">
            <summary>
            クレッシェンド、またはデクレッシェンド
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.ArticulationType.Dynaff">
            <summary>
            ピアノ、フォルテ等の強弱記号
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.ArticulationType.NoteAttack">
            <summary>
            アタック
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconParameter.ArticulationType.NoteTransition">
            <summary>
            NoteTransition(詳細不明)
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconDynamicsHandle.ICONID_HEAD_DYNAFF">
            <summary>
            強弱記号の場合の、IconIDの最初の5文字。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconDynamicsHandle.ICONID_HEAD_CRESCEND">
            <summary>
            クレッシェンドの場合の、IconIDの最初の5文字。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconDynamicsHandle.ICONID_HEAD_DECRESCEND">
            <summary>
            デクレッシェンドの場合の、IconIDの最初の5文字。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconDynamicsHandle.IconID">
            <summary>
            この強弱記号設定を一意に識別するためのIDです。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconDynamicsHandle.IDS">
            <summary>
            ユーザ・フレンドリー名です。
            このフィールドの値は、他の強弱記号設定のユーザ・フレンドリー名と重複する場合があります。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconDynamicsHandle.Original">
            <summary>
            この強弱記号設定が他の強弱記号設定から派生したものである場合、派生元を特定するための番号です。
            </summary>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.#ctor">
            <summary>
            デフォルトの設定で、新しい強弱記号設定のインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            指定されたパラメータを使って、新しい強弱記号設定のインスタンスを初期化します。
            </summary>
            <param name="aic_file">初期化に使用する設定ファイルのパス</param>
            <param name="ids">フィールドIDSの初期値</param>
            <param name="icon_id">フィールドIconIDの初期値</param>
            <param name="index">フィールドOriginalの初期値</param>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.isDynaffType">
            <summary>
            このハンドルが強弱記号を表すものかどうかを表すブール値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.isCrescendType">
            <summary>
            このハンドルがクレッシェンドを表すものかどうかを表すブール値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.isDecrescendType">
            <summary>
            このハンドルがデクレッシェンドを表すものかどうかを表すブール値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.Clone">
            <summary>
            このインスタンスのコピーを作成します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.clone">
            <summary>
            このインスタンスのコピーを作成します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.castToVsqHandle">
            <summary>
            この強弱記号設定のインスタンスを、VsqHandleに型キャストします。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.getCaption">
            <summary>
            キャプションを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.setCaption(System.String)">
            <summary>
            キャプションを設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.getLength">
            <summary>
            ゲートタイム長さを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.setLength(System.Int32)">
            <summary>
            ゲートタイム長さを設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.getStartDyn">
            <summary>
            DYNの開始値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.setStartDyn(System.Int32)">
            <summary>
            DYNの開始値を設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.getEndDyn">
            <summary>
            DYNの終了値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.setEndDyn(System.Int32)">
            <summary>
            DYNの終了値を設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.getDynBP">
            <summary>
            DYNカーブを表すリストを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconDynamicsHandle.setDynBP(cadencii.vsq.VibratoBPList)">
            <summary>
            DYNカーブを表すリストを設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:cadencii.vsq.IconDynamicsHandle.Caption">
            <summary>
            XMLシリアライズ用、キャプションです。
            </summary>
        </member>
        <member name="P:cadencii.vsq.IconDynamicsHandle.Length">
            <summary>
            XMLシリアライズ用、ゲートタイム長さです。
            </summary>
        </member>
        <member name="P:cadencii.vsq.IconDynamicsHandle.StartDyn">
            <summary>
            XMLシリアライズ用、DYNの開始値です。
            </summary>
        </member>
        <member name="P:cadencii.vsq.IconDynamicsHandle.EndDyn">
            <summary>
            XMLシリアライズ用、DYNの終了値です。
            </summary>
        </member>
        <member name="P:cadencii.vsq.IconDynamicsHandle.DynBP">
            <summary>
            XMLシリアライズ用、DYNカーブを表すリストです。
            </summary>
        </member>
        <member name="T:cadencii.vsq.IconHandle">
            <summary>
            歌手設定を表します。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconHandle.Caption">
            <summary>
            キャプション。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconHandle.IconID">
            <summary>
            この歌手設定を一意に識別するためのIDです。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconHandle.IDS">
            <summary>
            ユーザ・フレンドリー名。
            このフィールドの値は、他の歌手設定のユーザ・フレンドリー名と重複する場合があります。
            </summary>
        </member>
        <member name="F:cadencii.vsq.IconHandle.Length">
            <summary>
            ゲートタイム長さ。
            </summary>
        </member>
        <member name="M:cadencii.vsq.IconHandle.#ctor">
            <summary>
            新しい歌手設定のインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.IconHandle.getLength">
            <summary>
            ゲートタイム長さを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconHandle.setLength(System.Int32)">
            <summary>
            ゲートタイム長さを設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.IconHandle.equals(cadencii.vsq.IconHandle)">
            <summary>
            このインスタンスと、指定された歌手変更のインスタンスが等しいかどうかを判定します。
            </summary>
            <param name="item">比較対象の歌手変更。</param>
            <returns>このインスタンスと、比較対象の歌手変更が等しければtrue、そうでなければfalseを返します。</returns>
        </member>
        <member name="M:cadencii.vsq.IconHandle.clone">
            <summary>
            このインスタンスのコピーを作成します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.IconHandle.Clone">
            <summary>
            このインスタンスのコピーを作成します。
            </summary>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.InternalStreamWriter">
            <summary>
            改行コードに0x0d 0x0aを用いるテキストライター
            </summary>
        </member>
        <member name="T:MusicXML.scorepartwise">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.work">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.movementnumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.movementtitle">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.identification">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.defaults">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.credit">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.partlist">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.part">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwise.version">
            <remarks/>
        </member>
        <member name="T:MusicXML.work">
            <remarks/>
        </member>
        <member name="P:MusicXML.work.worknumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.work.worktitle">
            <remarks/>
        </member>
        <member name="P:MusicXML.work.opus">
            <remarks/>
        </member>
        <member name="T:MusicXML.opus">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.href">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.typeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.role">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.title">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.show">
            <remarks/>
        </member>
        <member name="P:MusicXML.opus.actuate">
            <remarks/>
        </member>
        <member name="T:MusicXML.opusType">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusType.simple">
            <remarks/>
        </member>
        <member name="T:MusicXML.opusShow">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusShow.new">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusShow.replace">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusShow.embed">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusShow.other">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusShow.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.opusActuate">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusActuate.onRequest">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusActuate.onLoad">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusActuate.other">
            <remarks/>
        </member>
        <member name="F:MusicXML.opusActuate.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.feature">
            <remarks/>
        </member>
        <member name="P:MusicXML.feature.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.feature.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.grouping">
            <remarks/>
        </member>
        <member name="P:MusicXML.grouping.feature">
            <remarks/>
        </member>
        <member name="P:MusicXML.grouping.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.grouping.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.grouping.memberof">
            <remarks/>
        </member>
        <member name="T:MusicXML.startstopsingle">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopsingle.start">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopsingle.stop">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopsingle.single">
            <remarks/>
        </member>
        <member name="T:MusicXML.repeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.repeat.direction">
            <remarks/>
        </member>
        <member name="P:MusicXML.repeat.times">
            <remarks/>
        </member>
        <member name="P:MusicXML.repeat.winged">
            <remarks/>
        </member>
        <member name="P:MusicXML.repeat.wingedSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.backwardforward">
            <remarks/>
        </member>
        <member name="F:MusicXML.backwardforward.backward">
            <remarks/>
        </member>
        <member name="F:MusicXML.backwardforward.forward">
            <remarks/>
        </member>
        <member name="T:MusicXML.winged">
            <remarks/>
        </member>
        <member name="F:MusicXML.winged.none">
            <remarks/>
        </member>
        <member name="F:MusicXML.winged.straight">
            <remarks/>
        </member>
        <member name="F:MusicXML.winged.curved">
            <remarks/>
        </member>
        <member name="F:MusicXML.winged.doublestraight">
            <remarks/>
        </member>
        <member name="F:MusicXML.winged.doublecurved">
            <remarks/>
        </member>
        <member name="T:MusicXML.ending">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.endlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.endlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.textx">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.textxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.texty">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.textySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.ending.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.startstopdiscontinue">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopdiscontinue.start">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopdiscontinue.stop">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopdiscontinue.discontinue">
            <remarks/>
        </member>
        <member name="T:MusicXML.yesno">
            <remarks/>
        </member>
        <member name="F:MusicXML.yesno.yes">
            <remarks/>
        </member>
        <member name="F:MusicXML.yesno.no">
            <remarks/>
        </member>
        <member name="T:MusicXML.barstylecolor">
            <remarks/>
        </member>
        <member name="P:MusicXML.barstylecolor.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.barstylecolor.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.barstyle">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.regular">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.dotted">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.dashed">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.heavy">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.lightlight">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.lightheavy">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.heavylight">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.heavyheavy">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.tick">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.short">
            <remarks/>
        </member>
        <member name="F:MusicXML.barstyle.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.barline">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.barstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.wavyline">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.segno">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.coda">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.fermata">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.ending">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.repeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.location">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.segno1">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.coda1">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.divisions">
            <remarks/>
        </member>
        <member name="P:MusicXML.barline.divisionsSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.formattedtext">
            <remarks/>
        </member>
        <member name="P:MusicXML.formattedtext.lang">
            <remarks/>
        </member>
        <member name="P:MusicXML.formattedtext.space">
            <remarks/>
        </member>
        <member name="P:MusicXML.formattedtext.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.reference">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.referenceSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.parentheses">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.parenthesesSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.bracket">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.bracketSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.size">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.level.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.symbolsize">
            <remarks/>
        </member>
        <member name="F:MusicXML.symbolsize.full">
            <remarks/>
        </member>
        <member name="F:MusicXML.symbolsize.cue">
            <remarks/>
        </member>
        <member name="F:MusicXML.symbolsize.large">
            <remarks/>
        </member>
        <member name="T:MusicXML.wavyline">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.startnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.startnoteSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.trillstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.trillstepSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.twonoteturn">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.twonoteturnSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.accelerate">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.accelerateSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.beats">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.beatsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.secondbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.secondbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.lastbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.wavyline.lastbeatSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.startstopcontinue">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopcontinue.start">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopcontinue.stop">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopcontinue.continue">
            <remarks/>
        </member>
        <member name="T:MusicXML.abovebelow">
            <remarks/>
        </member>
        <member name="F:MusicXML.abovebelow.above">
            <remarks/>
        </member>
        <member name="F:MusicXML.abovebelow.below">
            <remarks/>
        </member>
        <member name="T:MusicXML.startnote">
            <remarks/>
        </member>
        <member name="F:MusicXML.startnote.upper">
            <remarks/>
        </member>
        <member name="F:MusicXML.startnote.main">
            <remarks/>
        </member>
        <member name="F:MusicXML.startnote.below">
            <remarks/>
        </member>
        <member name="T:MusicXML.trillstep">
            <remarks/>
        </member>
        <member name="F:MusicXML.trillstep.whole">
            <remarks/>
        </member>
        <member name="F:MusicXML.trillstep.half">
            <remarks/>
        </member>
        <member name="F:MusicXML.trillstep.unison">
            <remarks/>
        </member>
        <member name="T:MusicXML.twonoteturn">
            <remarks/>
        </member>
        <member name="F:MusicXML.twonoteturn.whole">
            <remarks/>
        </member>
        <member name="F:MusicXML.twonoteturn.half">
            <remarks/>
        </member>
        <member name="F:MusicXML.twonoteturn.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.emptyprintstylealign">
            <remarks/>
        </member>
        <member name="T:MusicXML.fermata">
            <remarks/>
        </member>
        <member name="P:MusicXML.fermata.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.fermata.typeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.fermata.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.uprightinverted">
            <remarks/>
        </member>
        <member name="F:MusicXML.uprightinverted.upright">
            <remarks/>
        </member>
        <member name="F:MusicXML.uprightinverted.inverted">
            <remarks/>
        </member>
        <member name="T:MusicXML.fermatashape">
            <remarks/>
        </member>
        <member name="F:MusicXML.fermatashape.normal">
            <remarks/>
        </member>
        <member name="F:MusicXML.fermatashape.angled">
            <remarks/>
        </member>
        <member name="F:MusicXML.fermatashape.square">
            <remarks/>
        </member>
        <member name="F:MusicXML.fermatashape.Item">
            <remarks/>
        </member>
        <member name="T:MusicXML.rightleftmiddle">
            <remarks/>
        </member>
        <member name="F:MusicXML.rightleftmiddle.right">
            <remarks/>
        </member>
        <member name="F:MusicXML.rightleftmiddle.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.rightleftmiddle.middle">
            <remarks/>
        </member>
        <member name="T:MusicXML.measurenumbering">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurenumbering.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.measurenumberingvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.measurenumberingvalue.none">
            <remarks/>
        </member>
        <member name="F:MusicXML.measurenumberingvalue.measure">
            <remarks/>
        </member>
        <member name="F:MusicXML.measurenumberingvalue.system">
            <remarks/>
        </member>
        <member name="T:MusicXML.measurelayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurelayout.measuredistance">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurelayout.measuredistanceSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.print">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.pagelayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.systemlayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.stafflayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.measurelayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.measurenumbering">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.partnamedisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.partabbreviationdisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.staffspacing">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.staffspacingSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.newsystem">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.newsystemSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.newpage">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.newpageSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.blankpage">
            <remarks/>
        </member>
        <member name="P:MusicXML.print.pagenumber">
            <remarks/>
        </member>
        <member name="T:MusicXML.pagelayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagelayout.pageheight">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagelayout.pagewidth">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagelayout.pagemargins">
            <remarks/>
        </member>
        <member name="T:MusicXML.pagemargins">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagemargins.leftmargin">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagemargins.rightmargin">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagemargins.topmargin">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagemargins.bottommargin">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagemargins.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.pagemargins.typeSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.margintype">
            <remarks/>
        </member>
        <member name="F:MusicXML.margintype.odd">
            <remarks/>
        </member>
        <member name="F:MusicXML.margintype.even">
            <remarks/>
        </member>
        <member name="F:MusicXML.margintype.both">
            <remarks/>
        </member>
        <member name="T:MusicXML.systemlayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemlayout.systemmargins">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemlayout.systemdistance">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemlayout.systemdistanceSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemlayout.topsystemdistance">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemlayout.topsystemdistanceSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemlayout.systemdividers">
            <remarks/>
        </member>
        <member name="T:MusicXML.systemmargins">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemmargins.leftmargin">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemmargins.rightmargin">
            <remarks/>
        </member>
        <member name="T:MusicXML.systemdividers">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemdividers.leftdivider">
            <remarks/>
        </member>
        <member name="P:MusicXML.systemdividers.rightdivider">
            <remarks/>
        </member>
        <member name="T:MusicXML.emptyprintobjectstylealign">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyprintobjectstylealign.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyprintobjectstylealign.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.stafflayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafflayout.staffdistance">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafflayout.staffdistanceSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafflayout.number">
            <remarks/>
        </member>
        <member name="T:MusicXML.namedisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.namedisplay.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.namedisplay.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.namedisplay.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.accidentaltext">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidentaltext.lang">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidentaltext.space">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidentaltext.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.accidentalvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.natural">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.doublesharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharpsharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flatflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.naturalsharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.naturalflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.quarterflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.quartersharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.threequartersflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.threequarterssharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharpdown">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharpup">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.naturaldown">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.naturalup">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flatdown">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flatup">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.triplesharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.tripleflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.slashquartersharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.slashsharp">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.slashflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.doubleslashflat">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharp1">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharp2">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharp3">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sharp5">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flat1">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flat2">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flat3">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.flat4">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.sori">
            <remarks/>
        </member>
        <member name="F:MusicXML.accidentalvalue.koron">
            <remarks/>
        </member>
        <member name="T:MusicXML.figure">
            <remarks/>
        </member>
        <member name="P:MusicXML.figure.prefix">
            <remarks/>
        </member>
        <member name="P:MusicXML.figure.figurenumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.figure.suffix">
            <remarks/>
        </member>
        <member name="P:MusicXML.figure.extend">
            <remarks/>
        </member>
        <member name="T:MusicXML.styletext">
            <remarks/>
        </member>
        <member name="P:MusicXML.styletext.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.extend">
            <remarks/>
        </member>
        <member name="P:MusicXML.extend.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.extend.typeSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.figuredbass">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.figure">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.duration">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.printdot">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.printdotSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.printlyric">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.printlyricSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.parentheses">
            <remarks/>
        </member>
        <member name="P:MusicXML.figuredbass.parenthesesSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.barre">
            <remarks/>
        </member>
        <member name="P:MusicXML.barre.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.barre.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.startstop">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstop.start">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstop.stop">
            <remarks/>
        </member>
        <member name="T:MusicXML.framenote">
            <remarks/>
        </member>
        <member name="P:MusicXML.framenote.string">
            <remarks/>
        </member>
        <member name="P:MusicXML.framenote.fret">
            <remarks/>
        </member>
        <member name="P:MusicXML.framenote.fingering">
            <remarks/>
        </member>
        <member name="P:MusicXML.framenote.barre">
            <remarks/>
        </member>
        <member name="T:MusicXML.string">
            <remarks/>
        </member>
        <member name="P:MusicXML.string.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.string.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.string.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.fret">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.fret.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.fontstyle">
            <remarks/>
        </member>
        <member name="F:MusicXML.fontstyle.normal">
            <remarks/>
        </member>
        <member name="F:MusicXML.fontstyle.italic">
            <remarks/>
        </member>
        <member name="T:MusicXML.fontweight">
            <remarks/>
        </member>
        <member name="F:MusicXML.fontweight.normal">
            <remarks/>
        </member>
        <member name="F:MusicXML.fontweight.bold">
            <remarks/>
        </member>
        <member name="T:MusicXML.fingering">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.substitution">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.substitutionSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.alternate">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.alternateSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.fingering.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.firstfret">
            <remarks/>
        </member>
        <member name="P:MusicXML.firstfret.text">
            <remarks/>
        </member>
        <member name="P:MusicXML.firstfret.location">
            <remarks/>
        </member>
        <member name="P:MusicXML.firstfret.locationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.firstfret.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.leftright">
            <remarks/>
        </member>
        <member name="F:MusicXML.leftright.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.leftright.right">
            <remarks/>
        </member>
        <member name="T:MusicXML.frame">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.framestrings">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.framefrets">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.firstfret">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.framenote">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.halign">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.halignSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.valign">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.valignSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.height">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.heightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.width">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.widthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.frame.unplayed">
            <remarks/>
        </member>
        <member name="T:MusicXML.leftcenterright">
            <remarks/>
        </member>
        <member name="F:MusicXML.leftcenterright.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.leftcenterright.center">
            <remarks/>
        </member>
        <member name="F:MusicXML.leftcenterright.right">
            <remarks/>
        </member>
        <member name="T:MusicXML.valignimage">
            <remarks/>
        </member>
        <member name="F:MusicXML.valignimage.top">
            <remarks/>
        </member>
        <member name="F:MusicXML.valignimage.middle">
            <remarks/>
        </member>
        <member name="F:MusicXML.valignimage.bottom">
            <remarks/>
        </member>
        <member name="T:MusicXML.degreetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreetype.text">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreetype.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.degreetypevalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreetypevalue.add">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreetypevalue.alter">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreetypevalue.subtract">
            <remarks/>
        </member>
        <member name="T:MusicXML.degreealter">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreealter.plusminus">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreealter.plusminusSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreealter.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.degreevalue">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreevalue.symbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreevalue.symbolSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreevalue.text">
            <remarks/>
        </member>
        <member name="P:MusicXML.degreevalue.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.degreesymbolvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreesymbolvalue.major">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreesymbolvalue.minor">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreesymbolvalue.augmented">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreesymbolvalue.diminished">
            <remarks/>
        </member>
        <member name="F:MusicXML.degreesymbolvalue.halfdiminished">
            <remarks/>
        </member>
        <member name="T:MusicXML.degree">
            <remarks/>
        </member>
        <member name="P:MusicXML.degree.degreevalue">
            <remarks/>
        </member>
        <member name="P:MusicXML.degree.degreealter">
            <remarks/>
        </member>
        <member name="P:MusicXML.degree.degreetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.degree.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.degree.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.bassalter">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassalter.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassalter.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassalter.location">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassalter.locationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassalter.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.bassstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassstep.text">
            <remarks/>
        </member>
        <member name="P:MusicXML.bassstep.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.step">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.A">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.B">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.C">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.D">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.E">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.F">
            <remarks/>
        </member>
        <member name="F:MusicXML.step.G">
            <remarks/>
        </member>
        <member name="T:MusicXML.bass">
            <remarks/>
        </member>
        <member name="P:MusicXML.bass.bassstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.bass.bassalter">
            <remarks/>
        </member>
        <member name="T:MusicXML.inversion">
            <remarks/>
        </member>
        <member name="P:MusicXML.inversion.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.kind">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.usesymbols">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.usesymbolsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.text">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.stackdegrees">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.stackdegreesSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.parenthesesdegrees">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.parenthesesdegreesSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.bracketdegrees">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.bracketdegreesSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.halign">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.halignSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.valign">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.valignSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.kind.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.valign">
            <remarks/>
        </member>
        <member name="F:MusicXML.valign.top">
            <remarks/>
        </member>
        <member name="F:MusicXML.valign.middle">
            <remarks/>
        </member>
        <member name="F:MusicXML.valign.bottom">
            <remarks/>
        </member>
        <member name="F:MusicXML.valign.baseline">
            <remarks/>
        </member>
        <member name="T:MusicXML.kindvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.major">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.minor">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.augmented">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.diminished">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.dominant">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.majorseventh">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.minorseventh">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.diminishedseventh">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.augmentedseventh">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.halfdiminished">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.majorminor">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.majorsixth">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.minorsixth">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.dominantninth">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.majorninth">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.minorninth">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.dominant11th">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.major11th">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.minor11th">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.dominant13th">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.major13th">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.minor13th">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.suspendedsecond">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.suspendedfourth">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.Neapolitan">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.Italian">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.French">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.German">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.pedal">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.power">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.Tristan">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.other">
            <remarks/>
        </member>
        <member name="F:MusicXML.kindvalue.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.rootalter">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootalter.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootalter.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootalter.location">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootalter.locationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootalter.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.rootstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootstep.text">
            <remarks/>
        </member>
        <member name="P:MusicXML.rootstep.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.root">
            <remarks/>
        </member>
        <member name="P:MusicXML.root.rootstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.root.rootalter">
            <remarks/>
        </member>
        <member name="T:MusicXML.harmony">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.kind">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.inversion">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.bass">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.degree">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.frame">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.offset">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.staff">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.typeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.printframe">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.printframeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmony.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.offset">
            <remarks/>
        </member>
        <member name="P:MusicXML.offset.sound">
            <remarks/>
        </member>
        <member name="P:MusicXML.offset.soundSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.offset.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.harmonytype">
            <remarks/>
        </member>
        <member name="F:MusicXML.harmonytype.explicit">
            <remarks/>
        </member>
        <member name="F:MusicXML.harmonytype.implied">
            <remarks/>
        </member>
        <member name="F:MusicXML.harmonytype.alternate">
            <remarks/>
        </member>
        <member name="T:MusicXML.slash">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.slashtype">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.slashdot">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.usedots">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.usedotsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.usestems">
            <remarks/>
        </member>
        <member name="P:MusicXML.slash.usestemsSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.notetypevalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item1024th">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item512th">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item256th">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item128th">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item64th">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item32nd">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.Item16th">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.eighth">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.quarter">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.half">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.whole">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.breve">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.long">
            <remarks/>
        </member>
        <member name="F:MusicXML.notetypevalue.maxima">
            <remarks/>
        </member>
        <member name="T:MusicXML.empty">
            <remarks/>
        </member>
        <member name="T:MusicXML.beatrepeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.beatrepeat.slashtype">
            <remarks/>
        </member>
        <member name="P:MusicXML.beatrepeat.slashdot">
            <remarks/>
        </member>
        <member name="P:MusicXML.beatrepeat.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.beatrepeat.slashes">
            <remarks/>
        </member>
        <member name="P:MusicXML.beatrepeat.usedots">
            <remarks/>
        </member>
        <member name="P:MusicXML.beatrepeat.usedotsSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.measurerepeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurerepeat.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurerepeat.slashes">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurerepeat.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.multiplerest">
            <remarks/>
        </member>
        <member name="P:MusicXML.multiplerest.usesymbols">
            <remarks/>
        </member>
        <member name="P:MusicXML.multiplerest.usesymbolsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.multiplerest.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.measurestyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.Item">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.measurestyle.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.transpose">
            <remarks/>
        </member>
        <member name="P:MusicXML.transpose.diatonic">
            <remarks/>
        </member>
        <member name="P:MusicXML.transpose.chromatic">
            <remarks/>
        </member>
        <member name="P:MusicXML.transpose.octavechange">
            <remarks/>
        </member>
        <member name="P:MusicXML.transpose.double">
            <remarks/>
        </member>
        <member name="P:MusicXML.transpose.number">
            <remarks/>
        </member>
        <member name="T:MusicXML.stafftuning">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafftuning.tuningstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafftuning.tuningalter">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafftuning.tuningalterSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafftuning.tuningoctave">
            <remarks/>
        </member>
        <member name="P:MusicXML.stafftuning.line">
            <remarks/>
        </member>
        <member name="T:MusicXML.staffdetails">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.stafftype">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.stafftypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.stafflines">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.stafftuning">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.capo">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.staffsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.staffsizeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.showfrets">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.showfretsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.printspacing">
            <remarks/>
        </member>
        <member name="P:MusicXML.staffdetails.printspacingSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.stafftype">
            <remarks/>
        </member>
        <member name="F:MusicXML.stafftype.ossia">
            <remarks/>
        </member>
        <member name="F:MusicXML.stafftype.cue">
            <remarks/>
        </member>
        <member name="F:MusicXML.stafftype.editorial">
            <remarks/>
        </member>
        <member name="F:MusicXML.stafftype.regular">
            <remarks/>
        </member>
        <member name="F:MusicXML.stafftype.alternate">
            <remarks/>
        </member>
        <member name="T:MusicXML.showfrets">
            <remarks/>
        </member>
        <member name="F:MusicXML.showfrets.numbers">
            <remarks/>
        </member>
        <member name="F:MusicXML.showfrets.letters">
            <remarks/>
        </member>
        <member name="T:MusicXML.clef">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.sign">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.line">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.clefoctavechange">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.additional">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.additionalSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.size">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.afterbarline">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.afterbarlineSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.clef.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.clefsign">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.G">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.F">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.C">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.percussion">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.TAB">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.jianpu">
            <remarks/>
        </member>
        <member name="F:MusicXML.clefsign.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.partsymbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.topstaff">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.bottomstaff">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.partsymbol.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.groupsymbolvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupsymbolvalue.none">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupsymbolvalue.brace">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupsymbolvalue.line">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupsymbolvalue.bracket">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupsymbolvalue.square">
            <remarks/>
        </member>
        <member name="T:MusicXML.interchangeable">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.timerelation">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.timerelationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.beats">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.beattype">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.symbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.symbolSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.separator">
            <remarks/>
        </member>
        <member name="P:MusicXML.interchangeable.separatorSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.timerelation">
            <remarks/>
        </member>
        <member name="F:MusicXML.timerelation.parentheses">
            <remarks/>
        </member>
        <member name="F:MusicXML.timerelation.bracket">
            <remarks/>
        </member>
        <member name="F:MusicXML.timerelation.equals">
            <remarks/>
        </member>
        <member name="F:MusicXML.timerelation.slash">
            <remarks/>
        </member>
        <member name="F:MusicXML.timerelation.space">
            <remarks/>
        </member>
        <member name="F:MusicXML.timerelation.hyphen">
            <remarks/>
        </member>
        <member name="T:MusicXML.timesymbol">
            <remarks/>
        </member>
        <member name="F:MusicXML.timesymbol.common">
            <remarks/>
        </member>
        <member name="F:MusicXML.timesymbol.cut">
            <remarks/>
        </member>
        <member name="F:MusicXML.timesymbol.singlenumber">
            <remarks/>
        </member>
        <member name="F:MusicXML.timesymbol.note">
            <remarks/>
        </member>
        <member name="F:MusicXML.timesymbol.dottednote">
            <remarks/>
        </member>
        <member name="F:MusicXML.timesymbol.normal">
            <remarks/>
        </member>
        <member name="T:MusicXML.timeseparator">
            <remarks/>
        </member>
        <member name="F:MusicXML.timeseparator.none">
            <remarks/>
        </member>
        <member name="F:MusicXML.timeseparator.horizontal">
            <remarks/>
        </member>
        <member name="F:MusicXML.timeseparator.diagonal">
            <remarks/>
        </member>
        <member name="F:MusicXML.timeseparator.vertical">
            <remarks/>
        </member>
        <member name="F:MusicXML.timeseparator.adjacent">
            <remarks/>
        </member>
        <member name="T:MusicXML.time">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.symbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.symbolSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.separator">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.separatorSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.time.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType9">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType9.beattype">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType9.beats">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType9.interchangeable">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType9.senzamisura">
            <remarks/>
        </member>
        <member name="T:MusicXML.keyoctave">
            <remarks/>
        </member>
        <member name="P:MusicXML.keyoctave.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.keyoctave.cancel">
            <remarks/>
        </member>
        <member name="P:MusicXML.keyoctave.cancelSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.keyoctave.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.cancel">
            <remarks/>
        </member>
        <member name="P:MusicXML.cancel.location">
            <remarks/>
        </member>
        <member name="P:MusicXML.cancel.locationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.cancel.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.cancellocation">
            <remarks/>
        </member>
        <member name="F:MusicXML.cancellocation.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.cancellocation.right">
            <remarks/>
        </member>
        <member name="F:MusicXML.cancellocation.beforebarline">
            <remarks/>
        </member>
        <member name="T:MusicXML.key">
            <remarks/>
        </member>
        <member name="P:MusicXML.key.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.key.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.key.keyoctave">
            <remarks/>
        </member>
        <member name="P:MusicXML.key.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.key.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.key.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType8">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType8.cancel">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType8.fifths">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType8.keyaccidental">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType8.keyalter">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType8.keystep">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType8.mode">
            <remarks/>
        </member>
        <member name="T:MusicXML.attributes">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.divisions">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.divisionsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.key">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.time">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.staves">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.partsymbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.instruments">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.clef">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.staffdetails">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.transpose">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.directive">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributes.measurestyle">
            <remarks/>
        </member>
        <member name="T:MusicXML.attributesDirective">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributesDirective.lang">
            <remarks/>
        </member>
        <member name="P:MusicXML.attributesDirective.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.sound">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.mididevice">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.midiinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.play">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.offset">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.tempo">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.tempoSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.dynamics">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.dynamicsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.dacapo">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.dacapoSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.segno">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.dalsegno">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.coda">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.tocoda">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.divisions">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.divisionsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.forwardrepeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.forwardrepeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.fine">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.timeonly">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.pizzicato">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.pizzicatoSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.pan">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.panSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.elevation">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.elevationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.damperpedal">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.softpedal">
            <remarks/>
        </member>
        <member name="P:MusicXML.sound.sostenutopedal">
            <remarks/>
        </member>
        <member name="T:MusicXML.mididevice">
            <remarks/>
        </member>
        <member name="P:MusicXML.mididevice.port">
            <remarks/>
        </member>
        <member name="P:MusicXML.mididevice.id">
            <remarks/>
        </member>
        <member name="P:MusicXML.mididevice.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.midiinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.midichannel">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.midiname">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.midibank">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.midiprogram">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.midiunpitched">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.volume">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.volumeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.pan">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.panSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.elevation">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.elevationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.midiinstrument.id">
            <remarks/>
        </member>
        <member name="T:MusicXML.play">
            <remarks/>
        </member>
        <member name="P:MusicXML.play.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.play.id">
            <remarks/>
        </member>
        <member name="T:MusicXML.mute">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.on">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.off">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.straight">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.cup">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.harmonnostem">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.harmonstem">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.bucket">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.plunger">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.hat">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.solotone">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.practice">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.stopmute">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.stophand">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.echo">
            <remarks/>
        </member>
        <member name="F:MusicXML.mute.palm">
            <remarks/>
        </member>
        <member name="T:MusicXML.otherplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherplay.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherplay.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.semipitched">
            <remarks/>
        </member>
        <member name="F:MusicXML.semipitched.high">
            <remarks/>
        </member>
        <member name="F:MusicXML.semipitched.mediumhigh">
            <remarks/>
        </member>
        <member name="F:MusicXML.semipitched.medium">
            <remarks/>
        </member>
        <member name="F:MusicXML.semipitched.mediumlow">
            <remarks/>
        </member>
        <member name="F:MusicXML.semipitched.low">
            <remarks/>
        </member>
        <member name="F:MusicXML.semipitched.verylow">
            <remarks/>
        </member>
        <member name="T:MusicXML.otherdirection">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherdirection.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherdirection.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherdirection.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.stick">
            <remarks/>
        </member>
        <member name="P:MusicXML.stick.sticktype">
            <remarks/>
        </member>
        <member name="P:MusicXML.stick.stickmaterial">
            <remarks/>
        </member>
        <member name="P:MusicXML.stick.tip">
            <remarks/>
        </member>
        <member name="P:MusicXML.stick.tipSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.sticktype">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticktype.bassdrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticktype.doublebassdrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticktype.timpani">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticktype.xylophone">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticktype.yarn">
            <remarks/>
        </member>
        <member name="T:MusicXML.stickmaterial">
            <remarks/>
        </member>
        <member name="F:MusicXML.stickmaterial.soft">
            <remarks/>
        </member>
        <member name="F:MusicXML.stickmaterial.medium">
            <remarks/>
        </member>
        <member name="F:MusicXML.stickmaterial.hard">
            <remarks/>
        </member>
        <member name="F:MusicXML.stickmaterial.shaded">
            <remarks/>
        </member>
        <member name="F:MusicXML.stickmaterial.x">
            <remarks/>
        </member>
        <member name="T:MusicXML.tipdirection">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.up">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.down">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.right">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.northwest">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.northeast">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.southeast">
            <remarks/>
        </member>
        <member name="F:MusicXML.tipdirection.southwest">
            <remarks/>
        </member>
        <member name="T:MusicXML.beater">
            <remarks/>
        </member>
        <member name="P:MusicXML.beater.tip">
            <remarks/>
        </member>
        <member name="P:MusicXML.beater.tipSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.beater.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.beatervalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.bow">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.chimehammer">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.coin">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.finger">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.fingernail">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.fist">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.guiroscraper">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.hammer">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.hand">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.jazzstick">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.knittingneedle">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.metalhammer">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.snarestick">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.spoonmallet">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.trianglebeater">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.trianglebeaterplain">
            <remarks/>
        </member>
        <member name="F:MusicXML.beatervalue.wirebrush">
            <remarks/>
        </member>
        <member name="T:MusicXML.percussion">
            <remarks/>
        </member>
        <member name="P:MusicXML.percussion.Item">
            <remarks/>
        </member>
        <member name="P:MusicXML.percussion.enclosure">
            <remarks/>
        </member>
        <member name="P:MusicXML.percussion.enclosureSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.effect">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.anvil">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.autohorn">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.birdwhistle">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.cannon">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.duckcall">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.gunshot">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.klaxonhorn">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.lionsroar">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.policewhistle">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.siren">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.slidewhistle">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.thundersheet">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.windmachine">
            <remarks/>
        </member>
        <member name="F:MusicXML.effect.windwhistle">
            <remarks/>
        </member>
        <member name="T:MusicXML.glass">
            <remarks/>
        </member>
        <member name="F:MusicXML.glass.windchimes">
            <remarks/>
        </member>
        <member name="T:MusicXML.membrane">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.bassdrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.bassdrumonside">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.bongos">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.congadrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.gobletdrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.militarydrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.snaredrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.snaredrumsnaresoff">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.tambourine">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.tenordrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.timbales">
            <remarks/>
        </member>
        <member name="F:MusicXML.membrane.tomtom">
            <remarks/>
        </member>
        <member name="T:MusicXML.metal">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.almglocken">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.bell">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.bellplate">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.brakedrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.Chinesecymbal">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.cowbell">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.crashcymbals">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.crotale">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.cymbaltongs">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.domedgong">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.fingercymbals">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.flexatone">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.gong">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.hihat">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.highhatcymbals">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.handbell">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.sistrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.sizzlecymbal">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.sleighbells">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.suspendedcymbal">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.tamtam">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.triangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.metal.Vietnamesehat">
            <remarks/>
        </member>
        <member name="T:MusicXML.pitched">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.chimes">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.glockenspiel">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.mallet">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.marimba">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.tubularchimes">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.vibraphone">
            <remarks/>
        </member>
        <member name="F:MusicXML.pitched.xylophone">
            <remarks/>
        </member>
        <member name="T:MusicXML.sticklocation">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticklocation.center">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticklocation.rim">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticklocation.cymbalbell">
            <remarks/>
        </member>
        <member name="F:MusicXML.sticklocation.cymbaledge">
            <remarks/>
        </member>
        <member name="T:MusicXML.wood">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.boardclapper">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.cabasa">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.castanets">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.claves">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.guiro">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.logdrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.maraca">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.maracas">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.ratchet">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.sandpaperblocks">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.slitdrum">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.templeblock">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.vibraslap">
            <remarks/>
        </member>
        <member name="F:MusicXML.wood.woodblock">
            <remarks/>
        </member>
        <member name="T:MusicXML.enclosureshape">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.rectangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.square">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.oval">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.circle">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.bracket">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.triangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.diamond">
            <remarks/>
        </member>
        <member name="F:MusicXML.enclosureshape.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.accordionregistration">
            <remarks/>
        </member>
        <member name="P:MusicXML.accordionregistration.accordionhigh">
            <remarks/>
        </member>
        <member name="P:MusicXML.accordionregistration.accordionmiddle">
            <remarks/>
        </member>
        <member name="P:MusicXML.accordionregistration.accordionlow">
            <remarks/>
        </member>
        <member name="T:MusicXML.principalvoice">
            <remarks/>
        </member>
        <member name="P:MusicXML.principalvoice.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.principalvoice.symbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.principalvoice.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.principalvoicesymbol">
            <remarks/>
        </member>
        <member name="F:MusicXML.principalvoicesymbol.Hauptstimme">
            <remarks/>
        </member>
        <member name="F:MusicXML.principalvoicesymbol.Nebenstimme">
            <remarks/>
        </member>
        <member name="F:MusicXML.principalvoicesymbol.plain">
            <remarks/>
        </member>
        <member name="F:MusicXML.principalvoicesymbol.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.scordatura">
            <remarks/>
        </member>
        <member name="P:MusicXML.scordatura.accord">
            <remarks/>
        </member>
        <member name="T:MusicXML.accord">
            <remarks/>
        </member>
        <member name="P:MusicXML.accord.tuningstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.accord.tuningalter">
            <remarks/>
        </member>
        <member name="P:MusicXML.accord.tuningalterSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accord.tuningoctave">
            <remarks/>
        </member>
        <member name="P:MusicXML.accord.string">
            <remarks/>
        </member>
        <member name="T:MusicXML.stringmute">
            <remarks/>
        </member>
        <member name="P:MusicXML.stringmute.type">
            <remarks/>
        </member>
        <member name="T:MusicXML.onoff">
            <remarks/>
        </member>
        <member name="F:MusicXML.onoff.on">
            <remarks/>
        </member>
        <member name="F:MusicXML.onoff.off">
            <remarks/>
        </member>
        <member name="T:MusicXML.pedaltuning">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedaltuning.pedalstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedaltuning.pedalalter">
            <remarks/>
        </member>
        <member name="T:MusicXML.harppedals">
            <remarks/>
        </member>
        <member name="P:MusicXML.harppedals.pedaltuning">
            <remarks/>
        </member>
        <member name="T:MusicXML.octaveshift">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.size">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.octaveshift.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.updownstopcontinue">
            <remarks/>
        </member>
        <member name="F:MusicXML.updownstopcontinue.up">
            <remarks/>
        </member>
        <member name="F:MusicXML.updownstopcontinue.down">
            <remarks/>
        </member>
        <member name="F:MusicXML.updownstopcontinue.stop">
            <remarks/>
        </member>
        <member name="F:MusicXML.updownstopcontinue.continue">
            <remarks/>
        </member>
        <member name="T:MusicXML.metronomebeam">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronomebeam.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronomebeam.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.beamvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.beamvalue.begin">
            <remarks/>
        </member>
        <member name="F:MusicXML.beamvalue.continue">
            <remarks/>
        </member>
        <member name="F:MusicXML.beamvalue.end">
            <remarks/>
        </member>
        <member name="F:MusicXML.beamvalue.forwardhook">
            <remarks/>
        </member>
        <member name="F:MusicXML.beamvalue.backwardhook">
            <remarks/>
        </member>
        <member name="T:MusicXML.metronomenote">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronomenote.metronometype">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronomenote.metronomedot">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronomenote.metronomebeam">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronomenote.metronometuplet">
            <remarks/>
        </member>
        <member name="T:MusicXML.metronometuplet">
            <remarks/>
        </member>
        <member name="T:MusicXML.timemodification">
            <remarks/>
        </member>
        <member name="P:MusicXML.timemodification.actualnotes">
            <remarks/>
        </member>
        <member name="P:MusicXML.timemodification.normalnotes">
            <remarks/>
        </member>
        <member name="P:MusicXML.timemodification.normaltype">
            <remarks/>
        </member>
        <member name="P:MusicXML.timemodification.normaldot">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronometuplet.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronometuplet.bracket">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronometuplet.bracketSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronometuplet.shownumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronometuplet.shownumberSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.showtuplet">
            <remarks/>
        </member>
        <member name="F:MusicXML.showtuplet.actual">
            <remarks/>
        </member>
        <member name="F:MusicXML.showtuplet.both">
            <remarks/>
        </member>
        <member name="F:MusicXML.showtuplet.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.perminute">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.perminute.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.metronome">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronome.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronome.justify">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronome.justifySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronome.parentheses">
            <remarks/>
        </member>
        <member name="P:MusicXML.metronome.parenthesesSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.pedal">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedal.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedal.line">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedal.lineSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedal.sign">
            <remarks/>
        </member>
        <member name="P:MusicXML.pedal.signSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.startstopchangecontinue">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopchangecontinue.start">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopchangecontinue.stop">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopchangecontinue.change">
            <remarks/>
        </member>
        <member name="F:MusicXML.startstopchangecontinue.continue">
            <remarks/>
        </member>
        <member name="T:MusicXML.bracket">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.lineend">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.endlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.endlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bracket.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.lineend">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineend.up">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineend.down">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineend.both">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineend.arrow">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineend.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.linetype">
            <remarks/>
        </member>
        <member name="F:MusicXML.linetype.solid">
            <remarks/>
        </member>
        <member name="F:MusicXML.linetype.dashed">
            <remarks/>
        </member>
        <member name="F:MusicXML.linetype.dotted">
            <remarks/>
        </member>
        <member name="F:MusicXML.linetype.wavy">
            <remarks/>
        </member>
        <member name="T:MusicXML.dashes">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dashes.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.wedge">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.spread">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.spreadSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.niente">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.nienteSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.wedge.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.wedgetype">
            <remarks/>
        </member>
        <member name="F:MusicXML.wedgetype.crescendo">
            <remarks/>
        </member>
        <member name="F:MusicXML.wedgetype.diminuendo">
            <remarks/>
        </member>
        <member name="F:MusicXML.wedgetype.stop">
            <remarks/>
        </member>
        <member name="F:MusicXML.wedgetype.continue">
            <remarks/>
        </member>
        <member name="T:MusicXML.directiontype">
            <remarks/>
        </member>
        <member name="P:MusicXML.directiontype.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.directiontype.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:MusicXML.dynamics">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.underline">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.overline">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.linethrough">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.enclosure">
            <remarks/>
        </member>
        <member name="P:MusicXML.dynamics.enclosureSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType5">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.f">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.ff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.fff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.ffff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.fffff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.ffffff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.fp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.fz">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.mf">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.mp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.otherdynamics">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.p">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.pp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.ppp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.pppp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.ppppp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.pppppp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.rf">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.rfz">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.sf">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.sffz">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.sfp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.sfpp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType5.sfz">
            <remarks/>
        </member>
        <member name="T:MusicXML.image">
            <remarks/>
        </member>
        <member name="P:MusicXML.image.source">
            <remarks/>
        </member>
        <member name="P:MusicXML.image.type">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType7">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.accordionregistration">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.bracket">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.coda">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.damp">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.dampall">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.dashes">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.dynamics">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.eyeglasses">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.harppedals">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.image">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.metronome">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.octaveshift">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.otherdirection">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.pedal">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.percussion">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.principalvoice">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.rehearsal">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.scordatura">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.segno">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.stringmute">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.wedge">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType7.words">
            <remarks/>
        </member>
        <member name="T:MusicXML.direction">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.directiontype">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.offset">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.voice">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.staff">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.sound">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.directive">
            <remarks/>
        </member>
        <member name="P:MusicXML.direction.directiveSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.forward">
            <remarks/>
        </member>
        <member name="P:MusicXML.forward.duration">
            <remarks/>
        </member>
        <member name="P:MusicXML.forward.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.forward.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.forward.voice">
            <remarks/>
        </member>
        <member name="P:MusicXML.forward.staff">
            <remarks/>
        </member>
        <member name="T:MusicXML.backup">
            <remarks/>
        </member>
        <member name="P:MusicXML.backup.duration">
            <remarks/>
        </member>
        <member name="P:MusicXML.backup.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.backup.level">
            <remarks/>
        </member>
        <member name="T:MusicXML.textfontcolor">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.underline">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.overline">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.linethrough">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.rotation">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.rotationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.letterspacing">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.lang">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.dir">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.dirSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textfontcolor.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.textdirection">
            <remarks/>
        </member>
        <member name="F:MusicXML.textdirection.ltr">
            <remarks/>
        </member>
        <member name="F:MusicXML.textdirection.rtl">
            <remarks/>
        </member>
        <member name="F:MusicXML.textdirection.lro">
            <remarks/>
        </member>
        <member name="F:MusicXML.textdirection.rlo">
            <remarks/>
        </member>
        <member name="T:MusicXML.textelementdata">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.underline">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.overline">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.linethrough">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.rotation">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.rotationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.letterspacing">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.lang">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.dir">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.dirSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.textelementdata.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.lyric">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.endline">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.endparagraph">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.name">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.justify">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.justifySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyric.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.syllabic">
            <remarks/>
        </member>
        <member name="F:MusicXML.syllabic.single">
            <remarks/>
        </member>
        <member name="F:MusicXML.syllabic.begin">
            <remarks/>
        </member>
        <member name="F:MusicXML.syllabic.end">
            <remarks/>
        </member>
        <member name="F:MusicXML.syllabic.middle">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType6">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType6.elision">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType6.extend">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType6.humming">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType6.laughing">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType6.syllabic">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType6.text">
            <remarks/>
        </member>
        <member name="T:MusicXML.othernotation">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.othernotation.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.nonarpeggiate">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.nonarpeggiate.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.topbottom">
            <remarks/>
        </member>
        <member name="F:MusicXML.topbottom.top">
            <remarks/>
        </member>
        <member name="F:MusicXML.topbottom.bottom">
            <remarks/>
        </member>
        <member name="T:MusicXML.arpeggiate">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.direction">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.directionSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.arpeggiate.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.updown">
            <remarks/>
        </member>
        <member name="F:MusicXML.updown.up">
            <remarks/>
        </member>
        <member name="F:MusicXML.updown.down">
            <remarks/>
        </member>
        <member name="T:MusicXML.articulations">
            <remarks/>
        </member>
        <member name="P:MusicXML.articulations.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.articulations.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:MusicXML.emptyplacement">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyplacement.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyplacement.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.strongaccent">
            <remarks/>
        </member>
        <member name="P:MusicXML.strongaccent.type">
            <remarks/>
        </member>
        <member name="T:MusicXML.heeltoe">
            <remarks/>
        </member>
        <member name="P:MusicXML.heeltoe.substitution">
            <remarks/>
        </member>
        <member name="P:MusicXML.heeltoe.substitutionSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.breathmark">
            <remarks/>
        </member>
        <member name="P:MusicXML.breathmark.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.breathmark.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.breathmark.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.breathmarkvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.breathmarkvalue.Item">
            <remarks/>
        </member>
        <member name="F:MusicXML.breathmarkvalue.comma">
            <remarks/>
        </member>
        <member name="F:MusicXML.breathmarkvalue.tick">
            <remarks/>
        </member>
        <member name="T:MusicXML.emptyline">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.lineshape">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.lineshapeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyline.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.lineshape">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineshape.straight">
            <remarks/>
        </member>
        <member name="F:MusicXML.lineshape.curved">
            <remarks/>
        </member>
        <member name="T:MusicXML.placementtext">
            <remarks/>
        </member>
        <member name="P:MusicXML.placementtext.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.placementtext.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.placementtext.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType4">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.accent">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.breathmark">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.caesura">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.detachedlegato">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.doit">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.falloff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.otherarticulation">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.plop">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.scoop">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.spiccato">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.staccatissimo">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.staccato">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.stress">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.strongaccent">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.tenuto">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType4.unstress">
            <remarks/>
        </member>
        <member name="T:MusicXML.technical">
            <remarks/>
        </member>
        <member name="P:MusicXML.technical.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.technical.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:MusicXML.arrow">
            <remarks/>
        </member>
        <member name="P:MusicXML.arrow.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.arrow.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.arrow.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.arrowdirection">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.up">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.right">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.down">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.northwest">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.northeast">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.southeast">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.southwest">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.leftright">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.updown">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.northwestsoutheast">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.northeastsouthwest">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowdirection.other">
            <remarks/>
        </member>
        <member name="T:MusicXML.arrowstyle">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.single">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.double">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.filled">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.hollow">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.paired">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.combined">
            <remarks/>
        </member>
        <member name="F:MusicXML.arrowstyle.other">
            <remarks/>
        </member>
        <member name="T:MusicXML.circulararrow">
            <remarks/>
        </member>
        <member name="F:MusicXML.circulararrow.clockwise">
            <remarks/>
        </member>
        <member name="F:MusicXML.circulararrow.anticlockwise">
            <remarks/>
        </member>
        <member name="T:MusicXML.bend">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.bendalter">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.Item">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.ItemElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.withbar">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.accelerate">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.accelerateSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.beats">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.beatsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.firstbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.firstbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.lastbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.bend.lastbeatSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemChoiceType1">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemChoiceType1.prebend">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemChoiceType1.release">
            <remarks/>
        </member>
        <member name="T:MusicXML.hammeronpulloff">
            <remarks/>
        </member>
        <member name="P:MusicXML.hammeronpulloff.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.hammeronpulloff.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.hammeronpulloff.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.hammeronpulloff.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.hammeronpulloff.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.handbell">
            <remarks/>
        </member>
        <member name="P:MusicXML.handbell.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.handbell.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.handbell.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.handbellvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.damp">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.echo">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.gyro">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.handmartellato">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.malletlift">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.mallettable">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.martellato">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.martellatolift">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.mutedmartellato">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.plucklift">
            <remarks/>
        </member>
        <member name="F:MusicXML.handbellvalue.swing">
            <remarks/>
        </member>
        <member name="T:MusicXML.harmonic">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.Item">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.ItemElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.Item1">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.Item1ElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.printobjectSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.harmonic.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemChoiceType">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemChoiceType.artificial">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemChoiceType.natural">
            <remarks/>
        </member>
        <member name="T:MusicXML.Item1ChoiceType">
            <remarks/>
        </member>
        <member name="F:MusicXML.Item1ChoiceType.basepitch">
            <remarks/>
        </member>
        <member name="F:MusicXML.Item1ChoiceType.soundingpitch">
            <remarks/>
        </member>
        <member name="F:MusicXML.Item1ChoiceType.touchingpitch">
            <remarks/>
        </member>
        <member name="T:MusicXML.hole">
            <remarks/>
        </member>
        <member name="P:MusicXML.hole.holetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.hole.holeclosed">
            <remarks/>
        </member>
        <member name="P:MusicXML.hole.holeshape">
            <remarks/>
        </member>
        <member name="P:MusicXML.hole.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.hole.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.holeclosed">
            <remarks/>
        </member>
        <member name="P:MusicXML.holeclosed.location">
            <remarks/>
        </member>
        <member name="P:MusicXML.holeclosed.locationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.holeclosed.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.holeclosedlocation">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedlocation.right">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedlocation.bottom">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedlocation.left">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedlocation.top">
            <remarks/>
        </member>
        <member name="T:MusicXML.holeclosedvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedvalue.yes">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedvalue.no">
            <remarks/>
        </member>
        <member name="F:MusicXML.holeclosedvalue.half">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType3">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.arrow">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.bend">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.doubletongue">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.downbow">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.fingering">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.fingernails">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.fret">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.hammeron">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.handbell">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.harmonic">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.heel">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.hole">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.openstring">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.othertechnical">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.pluck">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.pulloff">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.snappizzicato">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.stopped">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.string">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.tap">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.thumbposition">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.toe">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.tripletongue">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType3.upbow">
            <remarks/>
        </member>
        <member name="T:MusicXML.accidentalmark">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidentalmark.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidentalmark.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidentalmark.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.tremolo">
            <remarks/>
        </member>
        <member name="P:MusicXML.tremolo.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.tremolo.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.tremolo.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tremolo.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.horizontalturn">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.startnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.startnoteSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.trillstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.trillstepSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.twonoteturn">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.twonoteturnSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.accelerate">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.accelerateSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.beats">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.beatsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.secondbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.secondbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.lastbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.lastbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.slash">
            <remarks/>
        </member>
        <member name="P:MusicXML.horizontalturn.slashSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.emptytrillsound">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.startnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.startnoteSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.trillstep">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.trillstepSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.twonoteturn">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.twonoteturnSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.accelerate">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.accelerateSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.beats">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.beatsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.secondbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.secondbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.lastbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptytrillsound.lastbeatSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.mordent">
            <remarks/>
        </member>
        <member name="P:MusicXML.mordent.long">
            <remarks/>
        </member>
        <member name="P:MusicXML.mordent.longSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.mordent.approach">
            <remarks/>
        </member>
        <member name="P:MusicXML.mordent.approachSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.mordent.departure">
            <remarks/>
        </member>
        <member name="P:MusicXML.mordent.departureSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ornaments">
            <remarks/>
        </member>
        <member name="P:MusicXML.ornaments.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.ornaments.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.ornaments.accidentalmark">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType2">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.delayedinvertedturn">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.delayedturn">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.invertedmordent">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.invertedturn">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.mordent">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.otherornament">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.schleifer">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.shake">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.tremolo">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.trillmark">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.turn">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.verticalturn">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType2.wavyline">
            <remarks/>
        </member>
        <member name="T:MusicXML.slide">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.accelerate">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.accelerateSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.beats">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.beatsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.firstbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.firstbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.lastbeat">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.lastbeatSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slide.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.glissando">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.glissando.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.tupletdot">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletdot.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.tuplettype">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplettype.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.tupletnumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletnumber.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.tupletportion">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletportion.tupletnumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletportion.tuplettype">
            <remarks/>
        </member>
        <member name="P:MusicXML.tupletportion.tupletdot">
            <remarks/>
        </member>
        <member name="T:MusicXML.tuplet">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.tupletactual">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.tupletnormal">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.bracket">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.bracketSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.shownumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.shownumberSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.showtype">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.showtypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.lineshape">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.lineshapeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.tuplet.placementSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.slur">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.orientation">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.orientationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezieroffset">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezieroffsetSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezieroffset2">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezieroffset2Specified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezierx">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezierxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.beziery">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezierySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezierx2">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.bezierx2Specified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.beziery2">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.beziery2Specified">
            <remarks/>
        </member>
        <member name="P:MusicXML.slur.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.overunder">
            <remarks/>
        </member>
        <member name="F:MusicXML.overunder.over">
            <remarks/>
        </member>
        <member name="F:MusicXML.overunder.under">
            <remarks/>
        </member>
        <member name="T:MusicXML.tied">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.linetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.linetypeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.dashlength">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.dashlengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.spacelength">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.spacelengthSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.placement">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.placementSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.orientation">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.orientationSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezieroffset">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezieroffsetSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezieroffset2">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezieroffset2Specified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezierx">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezierxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.beziery">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezierySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezierx2">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.bezierx2Specified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.beziery2">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.beziery2Specified">
            <remarks/>
        </member>
        <member name="P:MusicXML.tied.color">
            <remarks/>
        </member>
        <member name="T:MusicXML.notations">
            <remarks/>
        </member>
        <member name="P:MusicXML.notations.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.notations.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.notations.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.notations.printobject">
            <remarks/>
        </member>
        <member name="P:MusicXML.notations.printobjectSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.beam">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.repeater">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.repeaterSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.fan">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.fanSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.beam.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.fan">
            <remarks/>
        </member>
        <member name="F:MusicXML.fan.accel">
            <remarks/>
        </member>
        <member name="F:MusicXML.fan.rit">
            <remarks/>
        </member>
        <member name="F:MusicXML.fan.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.noteheadtext">
            <remarks/>
        </member>
        <member name="P:MusicXML.noteheadtext.Items">
            <remarks/>
        </member>
        <member name="T:MusicXML.notehead">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.filled">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.filledSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.parentheses">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.parenthesesSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.notehead.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.noteheadvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.slash">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.triangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.diamond">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.square">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.cross">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.x">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.circlex">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.invertedtriangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.arrowdown">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.arrowup">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.slashed">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.backslashed">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.normal">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.cluster">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.circledot">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.lefttriangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.rectangle">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.none">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.do">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.re">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.mi">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.fa">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.faup">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.so">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.la">
            <remarks/>
        </member>
        <member name="F:MusicXML.noteheadvalue.ti">
            <remarks/>
        </member>
        <member name="T:MusicXML.stem">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.stem.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.stemvalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.stemvalue.down">
            <remarks/>
        </member>
        <member name="F:MusicXML.stemvalue.up">
            <remarks/>
        </member>
        <member name="F:MusicXML.stemvalue.double">
            <remarks/>
        </member>
        <member name="F:MusicXML.stemvalue.none">
            <remarks/>
        </member>
        <member name="T:MusicXML.accidental">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.cautionary">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.cautionarySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.editorial">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.editorialSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.parentheses">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.parenthesesSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.bracket">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.bracketSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.size">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.accidental.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.notetype">
            <remarks/>
        </member>
        <member name="P:MusicXML.notetype.size">
            <remarks/>
        </member>
        <member name="P:MusicXML.notetype.sizeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.notetype.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.instrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.instrument.id">
            <remarks/>
        </member>
        <member name="T:MusicXML.tie">
            <remarks/>
        </member>
        <member name="P:MusicXML.tie.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.tie.timeonly">
            <remarks/>
        </member>
        <member name="T:MusicXML.rest">
            <remarks/>
        </member>
        <member name="P:MusicXML.rest.displaystep">
            <remarks/>
        </member>
        <member name="P:MusicXML.rest.displayoctave">
            <remarks/>
        </member>
        <member name="P:MusicXML.rest.measure">
            <remarks/>
        </member>
        <member name="P:MusicXML.rest.measureSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.unpitched">
            <remarks/>
        </member>
        <member name="P:MusicXML.unpitched.displaystep">
            <remarks/>
        </member>
        <member name="P:MusicXML.unpitched.displayoctave">
            <remarks/>
        </member>
        <member name="T:MusicXML.pitch">
            <remarks/>
        </member>
        <member name="P:MusicXML.pitch.step">
            <remarks/>
        </member>
        <member name="P:MusicXML.pitch.alter">
            <remarks/>
        </member>
        <member name="P:MusicXML.pitch.alterSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.pitch.octave">
            <remarks/>
        </member>
        <member name="T:MusicXML.grace">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.stealtimeprevious">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.stealtimepreviousSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.stealtimefollowing">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.stealtimefollowingSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.maketime">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.maketimeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.slash">
            <remarks/>
        </member>
        <member name="P:MusicXML.grace.slashSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.note">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.ItemsElementName">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.instrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.voice">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.dot">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.accidental">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.timemodification">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.stem">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.notehead">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.noteheadtext">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.staff">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.beam">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.notations">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.lyric">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.play">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.fontweightSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.printdot">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.printdotSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.printlyric">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.printlyricSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.dynamics">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.dynamicsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.enddynamics">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.enddynamicsSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.attack">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.attackSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.release">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.releaseSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.timeonly">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.pizzicato">
            <remarks/>
        </member>
        <member name="P:MusicXML.note.pizzicatoSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType1">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.chord">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.cue">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.duration">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.grace">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.pitch">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.rest">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.tie">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType1.unpitched">
            <remarks/>
        </member>
        <member name="T:MusicXML.virtualinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.virtualinstrument.virtuallibrary">
            <remarks/>
        </member>
        <member name="P:MusicXML.virtualinstrument.virtualname">
            <remarks/>
        </member>
        <member name="T:MusicXML.scoreinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoreinstrument.instrumentname">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoreinstrument.instrumentabbreviation">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoreinstrument.instrumentsound">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoreinstrument.Item">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoreinstrument.virtualinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoreinstrument.id">
            <remarks/>
        </member>
        <member name="T:MusicXML.partname">
            <remarks/>
        </member>
        <member name="P:MusicXML.partname.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.scorepart">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.identification">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.partname">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.partnamedisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.partabbreviation">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.partabbreviationdisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.group">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.scoreinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.mididevice">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.midiinstrument">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepart.id">
            <remarks/>
        </member>
        <member name="T:MusicXML.identification">
            <remarks/>
        </member>
        <member name="P:MusicXML.identification.creator">
            <remarks/>
        </member>
        <member name="P:MusicXML.identification.rights">
            <remarks/>
        </member>
        <member name="P:MusicXML.identification.encoding">
            <remarks/>
        </member>
        <member name="P:MusicXML.identification.source">
            <remarks/>
        </member>
        <member name="P:MusicXML.identification.relation">
            <remarks/>
        </member>
        <member name="P:MusicXML.identification.miscellaneous">
            <remarks/>
        </member>
        <member name="T:MusicXML.typedtext">
            <remarks/>
        </member>
        <member name="P:MusicXML.typedtext.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.typedtext.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.encoding">
            <remarks/>
        </member>
        <member name="P:MusicXML.encoding.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.encoding.ItemsElementName">
            <remarks/>
        </member>
        <member name="T:MusicXML.supports">
            <remarks/>
        </member>
        <member name="P:MusicXML.supports.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.supports.element">
            <remarks/>
        </member>
        <member name="P:MusicXML.supports.attribute">
            <remarks/>
        </member>
        <member name="P:MusicXML.supports.value">
            <remarks/>
        </member>
        <member name="T:MusicXML.ItemsChoiceType">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType.encoder">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType.encodingdate">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType.encodingdescription">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType.software">
            <remarks/>
        </member>
        <member name="F:MusicXML.ItemsChoiceType.supports">
            <remarks/>
        </member>
        <member name="T:MusicXML.miscellaneousfield">
            <remarks/>
        </member>
        <member name="P:MusicXML.miscellaneousfield.name">
            <remarks/>
        </member>
        <member name="P:MusicXML.miscellaneousfield.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.groupbarline">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupbarline.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupbarline.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.groupbarlinevalue">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupbarlinevalue.yes">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupbarlinevalue.no">
            <remarks/>
        </member>
        <member name="F:MusicXML.groupbarlinevalue.Mensurstrich">
            <remarks/>
        </member>
        <member name="T:MusicXML.groupsymbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.relativeySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.color">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupsymbol.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.groupname">
            <remarks/>
        </member>
        <member name="P:MusicXML.groupname.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.partgroup">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.groupname">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.groupnamedisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.groupabbreviation">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.groupabbreviationdisplay">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.groupsymbol">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.groupbarline">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.grouptime">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.footnote">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.level">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.partgroup.number">
            <remarks/>
        </member>
        <member name="T:MusicXML.partlist">
            <remarks/>
        </member>
        <member name="P:MusicXML.partlist.partgroup">
            <remarks/>
        </member>
        <member name="P:MusicXML.partlist.scorepart">
            <remarks/>
        </member>
        <member name="P:MusicXML.partlist.Items">
            <remarks/>
        </member>
        <member name="T:MusicXML.bookmark">
            <remarks/>
        </member>
        <member name="P:MusicXML.bookmark.id">
            <remarks/>
        </member>
        <member name="P:MusicXML.bookmark.name">
            <remarks/>
        </member>
        <member name="P:MusicXML.bookmark.element">
            <remarks/>
        </member>
        <member name="P:MusicXML.bookmark.position">
            <remarks/>
        </member>
        <member name="T:MusicXML.link">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.href">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.typeSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.role">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.title">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.show">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.actuate">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.name">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.element">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.position">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.defaultx">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.defaultxSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.defaulty">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.defaultySpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.relativex">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.relativexSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.relativey">
            <remarks/>
        </member>
        <member name="P:MusicXML.link.relativeySpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.credit">
            <remarks/>
        </member>
        <member name="P:MusicXML.credit.credittype">
            <remarks/>
        </member>
        <member name="P:MusicXML.credit.link">
            <remarks/>
        </member>
        <member name="P:MusicXML.credit.bookmark">
            <remarks/>
        </member>
        <member name="P:MusicXML.credit.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.credit.page">
            <remarks/>
        </member>
        <member name="T:MusicXML.lyriclanguage">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyriclanguage.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyriclanguage.name">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyriclanguage.lang">
            <remarks/>
        </member>
        <member name="T:MusicXML.lyricfont">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.name">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.lyricfont.fontweightSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.emptyfont">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyfont.fontfamily">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyfont.fontstyle">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyfont.fontstyleSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyfont.fontsize">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyfont.fontweight">
            <remarks/>
        </member>
        <member name="P:MusicXML.emptyfont.fontweightSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.otherappearance">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherappearance.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.otherappearance.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.distance">
            <remarks/>
        </member>
        <member name="P:MusicXML.distance.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.distance.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.notesize">
            <remarks/>
        </member>
        <member name="P:MusicXML.notesize.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.notesize.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.notesizetype">
            <remarks/>
        </member>
        <member name="F:MusicXML.notesizetype.cue">
            <remarks/>
        </member>
        <member name="F:MusicXML.notesizetype.grace">
            <remarks/>
        </member>
        <member name="F:MusicXML.notesizetype.large">
            <remarks/>
        </member>
        <member name="T:MusicXML.linewidth">
            <remarks/>
        </member>
        <member name="P:MusicXML.linewidth.type">
            <remarks/>
        </member>
        <member name="P:MusicXML.linewidth.Value">
            <remarks/>
        </member>
        <member name="T:MusicXML.appearance">
            <remarks/>
        </member>
        <member name="P:MusicXML.appearance.linewidth">
            <remarks/>
        </member>
        <member name="P:MusicXML.appearance.notesize">
            <remarks/>
        </member>
        <member name="P:MusicXML.appearance.distance">
            <remarks/>
        </member>
        <member name="P:MusicXML.appearance.otherappearance">
            <remarks/>
        </member>
        <member name="T:MusicXML.scaling">
            <remarks/>
        </member>
        <member name="P:MusicXML.scaling.millimeters">
            <remarks/>
        </member>
        <member name="P:MusicXML.scaling.tenths">
            <remarks/>
        </member>
        <member name="T:MusicXML.defaults">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.scaling">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.pagelayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.systemlayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.stafflayout">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.appearance">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.musicfont">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.wordfont">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.lyricfont">
            <remarks/>
        </member>
        <member name="P:MusicXML.defaults.lyriclanguage">
            <remarks/>
        </member>
        <member name="T:MusicXML.scorepartwisePart">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePart.measure">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePart.id">
            <remarks/>
        </member>
        <member name="T:MusicXML.scorepartwisePartMeasure">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.implicit">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.implicitSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.noncontrolling">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.noncontrollingSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.width">
            <remarks/>
        </member>
        <member name="P:MusicXML.scorepartwisePartMeasure.widthSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.scoretimewise">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.work">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.movementnumber">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.movementtitle">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.identification">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.defaults">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.credit">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.partlist">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.measure">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewise.version">
            <remarks/>
        </member>
        <member name="T:MusicXML.scoretimewiseMeasure">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.part">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.number">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.implicit">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.implicitSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.noncontrolling">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.noncontrollingSpecified">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.width">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasure.widthSpecified">
            <remarks/>
        </member>
        <member name="T:MusicXML.scoretimewiseMeasurePart">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasurePart.Items">
            <remarks/>
        </member>
        <member name="P:MusicXML.scoretimewiseMeasurePart.id">
            <remarks/>
        </member>
        <member name="T:cadencii.vsq.io.MusicXmlWriter">
            <summary>
            MusicXML exporter class.
            </summary>
        </member>
        <member name="M:cadencii.vsq.io.MusicXmlWriter.write(cadencii.vsq.VsqFile,System.String)">
            <summary>
            Do export to MusicXML file.
            </summary>
            <param name="sequence">A sequence to be exported.</param>
            <param name="file_path">A file path.</param>
        </member>
        <member name="M:cadencii.vsq.io.MusicXmlWriter.createScorePart(cadencii.vsq.VsqTrack,cadencii.vsq.TimesigVector,cadencii.vsq.TempoVector)">
            <summary>
            Create MusicXML.scorepartwisePart object by VsqTrack instance.
            </summary>
            <param name="track"></param>
            <param name="timesig_table"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.io.MusicXmlWriter.TiedEvent">
            <summary>
            A sequence of notation, connected by ties.
            </summary>
        </member>
        <member name="F:cadencii.vsq.io.MusicXmlWriter.TiedEvent.templates_">
            <summary>
            Template of note. All notes are constructed by connecting these tempate notes.
            </summary>
        </member>
        <member name="M:cadencii.vsq.io.MusicXmlWriter.TiedEvent.#ctor(cadencii.vsq.VsqEvent,cadencii.vsq.TimesigVector,cadencii.vsq.TempoVector)">
            <summary>
            Initialize by VsqEvent object.
            </summary>
            <param name="item"></param>
            <param name="timesig_table"></param>
        </member>
        <member name="M:cadencii.vsq.io.MusicXmlWriter.TiedEvent.#ctor(System.Int32,System.Int32,cadencii.vsq.TimesigVector,cadencii.vsq.TempoVector)">
            <summary>
            Initialize by start clock and length. This constructor creates a 'rest'.
            </summary>
            <param name="clock_start"></param>
            <param name="length"></param>
            <param name="timesig_table"></param>
        </member>
        <member name="T:cadencii.vsq.io.VsqxReader">
            <summary>
            VSQXファイルを読み込むクラス
            </summary>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.readFromVsqx(System.String)">
            <summary>
            vsqxファイルを読み込み，新しいシーケンスオブジェクトを生成する
            </summary>
            <param name="filePath">ファイルパス</param>
            <exception cref="T:System.Exception">読み込みに失敗した時スローされる</exception>
            <returns>生成したシーケンスオブジェクト</returns>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.parseMusicalPart(System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.Dictionary{System.Int32,cadencii.vsq.IconHandle}},cadencii.vsq.VsqTrack,System.Xml.XmlNode)">
            <summary>
            musicalPartを解釈し、パート内の情報をtrackに追加する
            </summary>
            <param name="voiceTable">音源情報のテーブル</param>
            <param name="track">追加先のトラック</param>
            <param name="musicalPart">解釈対象のmusicalPart</param>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.getOpening(System.Xml.XmlNode)">
            <summary>
            noteを表すxml要素から、opening値を取得する
            </summary>
            <param name="node">note要素を表すxml要素</param>
            <returns>opening値</returns>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.getNoteAttributes(System.Xml.XmlNode)">
            <summary>
            noteを表すxml要素から、attr要素の値を取得する
            </summary>
            <param name="note">note要素を表すxml要素</param>
            <returns>attrの要素名をキーとした値のリスト</returns>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.createNoteEvent(System.Xml.XmlNode,System.Int32)">
            <summary>
            xml要素から音符イベントを生成する
            </summary>
            <param name="note">xml要素</param>
            <param name="tickOffset">指定したxml要素が所属しているmusicalPartの、オフセットtick数</param>
            <returns>生成した音符イベント</returns>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.getVibratoCurve(System.Xml.XmlNode,System.String,System.Double)">
            <summary>
            noteを表現するxml要素からVirbatoBPListを取得する
            </summary>
            <param name="note">xml要素</param>
            <param name="type">取得するVibratoBPListのタイプ。vibDepまたはvibRateを指定する</param>
            <param name="delayRatio">音符の長さに対する、音符の先頭位置からビブラート開始位置までの距離の比率</param>
        </member>
        <member name="M:cadencii.vsq.io.VsqxReader.getVoiceTable(System.Xml.XmlDocument)">
            <summary>
            vsqxのxmlドキュメントに埋め込まれた音源情報のテーブルを取得する
            </summary>
            <param name="xml">xmlドキュメント</param>
            <returns>バンクセレクト、プログラムチェンジをキーとしたIconHandleのマップ</returns>
        </member>
        <member name="T:cadencii.vsq.io.VsqxWriter">
            <summary>
            Vsqx ファイルへのエクスポートを行うクラス。
            </summary>
        </member>
        <member name="M:cadencii.vsq.io.VsqxWriter.write(cadencii.vsq.VsqFile,System.String)">
            <summary>
            エクスポートを行う。
            </summary>
            <param name="path">出力先のファイルパス</param>
            <param name="sequence">出力するシーケンス</param>
        </member>
        <member name="T:cadencii.vsq.Lyric">
            <summary>
            VsqHandleに格納される歌詞の情報を扱うクラス。
            </summary>
        </member>
        <member name="F:cadencii.vsq.Lyric.Phrase">
            <summary>
            この歌詞のフレーズ
            </summary>
        </member>
        <member name="M:cadencii.vsq.Lyric.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.Lyric.equalsForSynth(cadencii.vsq.Lyric)">
            <summary>
            このオブジェクトのインスタンスと、指定されたアイテムが同じかどうかを調べます。
            音声合成したときに影響のある範囲のフィールドしか比較されません。
            たとえば、PhoneticSymbolProtectedがthisとitemで違っていても、他が同一であればtrueが返る。
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.Lyric.equals(cadencii.vsq.Lyric)">
            <summary>
            このオブジェクトのインスタンスと、指定されたオブジェクトが同じかどうかを調べます。
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.Lyric.getConsonantAdjustment">
            <summary>
            Consonant Adjustmentの文字列形式を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.Lyric.setConsonantAdjustment(System.String)">
            <summary>
            Consonant Adjustmentを文字列形式で設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.Lyric.getConsonantAdjustmentList">
            <summary>
            Consonant Adjustmentを、整数配列で取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.Lyric.setConsonantAdjustmentList(System.Collections.Generic.List{System.Int32})">
            <summary>
            Consonant Adjustmentを、整数配列形式で設定します。
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.Lyric.clone">
            <summary>
            このオブジェクトの簡易コピーを取得します。
            </summary>
            <returns>このインスタンスの簡易コピー</returns>
        </member>
        <member name="M:cadencii.vsq.Lyric.#ctor(System.String,System.String)">
            <summary>
            歌詞、発音記号を指定したコンストラクタ
            </summary>
            <param name="phrase">歌詞</param>
            <param name="phonetic_symbol">発音記号</param>
        </member>
        <member name="M:cadencii.vsq.Lyric.#ctor(System.String)">
            <summary>
            文字列(ex."a","a",0.0000,0.0)からのコンストラクタ
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:cadencii.vsq.Lyric.getPhoneticSymbol">
            <summary>
            この歌詞の発音記号を取得します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.Lyric.setPhoneticSymbol(System.String)">
            <summary>
            この歌詞の発音記号を設定します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.Lyric.toString(System.Boolean)">
            <summary>
            このインスタンスを文字列に変換します
            </summary>
            <param name="add_quatation_mark">クォーテーションマークを付けるかどうか</param>
            <returns>変換後の文字列</returns>
        </member>
        <member name="P:cadencii.vsq.Lyric.ConsonantAdjustment">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.Lyric.PhoneticSymbol">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="M:cadencii.vsq.LyricHandle.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.LyricHandle.#ctor(System.String,System.String)">
            <summary>
            type = Lyric用のhandleのコンストラクタ
            </summary>
            <param name="phrase">歌詞</param>
            <param name="phonetic_symbol">発音記号</param>
        </member>
        <member name="T:cadencii.vsq.MidiEvent">
            <summary>
            midiイベント。メタイベントは、メタイベントのデータ長をData[1]に格納せず、生のデータをDataに格納するので、注意が必要
            </summary>
        </member>
        <member name="P:cadencii.vsq.NoteHeadHandle.Depth">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.NoteHeadHandle.Duration">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.NoteHeadHandle.Caption">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.NoteHeadHandle.Length">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_VERSION_AND_DEVICE">
            <summary>
            (0x5000) Version number(MSB) &amp;, Device number(LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_DELAY">
            <summary>
            (0x5001) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_NOTE_NUMBER">
            <summary>
            (0x5002) Note number(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_VELOCITY">
            <summary>
            (0x5003) Velocity(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_NOTE_DURATION">
            <summary>
            (0x5004) Note Duration in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_NOTE_LOCATION">
            <summary>
            (0x5005) Note Location(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_ATTACK_TYPE">
            <summary>
            (0x5006) Attack Type(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_ATTACK_DURATION">
            <summary>
            (0x5007) Attack Duration in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_ATTACK_DEPTH">
            <summary>
            (0x5008) Attack Depth(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_INDEX_OF_VIBRATO_DB">
            <summary>
            (0x500c) Index of Vibrato DB(MSB: ID_H00, LSB:ID_L00)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_VIBRATO_CONFIG">
            <summary>
            (0x500d) Vibrato configuration(MSB: Index of Vibrato Type, LSB: Duration &amp;, Configuration parameter of vibrato)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_VIBRATO_DELAY">
            <summary>
            (0x500e) Vibrato Delay(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL_BYTES">
            <summary>
            (0x5012) Number of phonetic symbols in bytes(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL1">
            <summary>
            (0x5013) Phonetic symbol 1(MSB:Phonetic symbol 1, LSB: Consonant adjustment 1)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL2">
            <summary>
            (0x5014) Phonetic symbol 2(MSB:Phonetic symbol 2, LSB: Consonant adjustment 2)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL3">
            <summary>
            (0x5015) Phonetic symbol 3(MSB:Phonetic symbol 3, LSB: Consonant adjustment 3)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL4">
            <summary>
            (0x5016) Phonetic symbol 4(MSB:Phonetic symbol 4, LSB: Consonant adjustment 4)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL5">
            <summary>
            (0x5017) Phonetic symbol 5(MSB:Phonetic symbol 5, LSB: Consonant adjustment 5)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL6">
            <summary>
            (0x5018) Phonetic symbol 6(MSB:Phonetic symbol 6, LSB: Consonant adjustment 6)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL7">
            <summary>
            (0x5019) Phonetic symbol 7(MSB:Phonetic symbol 7, LSB: Consonant adjustment 7)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL8">
            <summary>
            (0x501a) Phonetic symbol 8(MSB:Phonetic symbol 8, LSB: Consonant adjustment 8)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL9">
            <summary>
            (0x501b) Phonetic symbol 9(MSB:Phonetic symbol 9, LSB: Consonant adjustment 9)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL10">
            <summary>
            (0x501c) Phonetic symbol 10(MSB:Phonetic symbol 10, LSB: Consonant adjustment 10)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL11">
            <summary>
            (0x501d) Phonetic symbol 11(MSB:Phonetic symbol 11, LSB: Consonant adjustment 11)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL12">
            <summary>
            (0x501e) Phonetic symbol 12(MSB:Phonetic symbol 12, LSB: Consonant adjustment 12)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL13">
            <summary>
            (0x501f) Phonetic symbol 13(MSB:Phonetic symbol 13, LSB: Consonant adjustment 13)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL14">
            <summary>
            (0x5020) Phonetic symbol 14(MSB:Phonetic symbol 14, LSB: Consonant adjustment 14)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL15">
            <summary>
            (0x5021) Phonetic symbol 15(MSB:Phonetic symbol 15, LSB: Consonant adjustment 15)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL16">
            <summary>
            (0x5022) Phonetic symbol 16(MSB:Phonetic symbol 16, LSB: Consonant adjustment 16)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL17">
            <summary>
            (0x5023) Phonetic symbol 17(MSB:Phonetic symbol 17, LSB: Consonant adjustment 17)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL18">
            <summary>
            (0x5024) Phonetic symbol 18(MSB:Phonetic symbol 18, LSB: Consonant adjustment 18)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL19">
            <summary>
            (0x5025) Phonetic symbol 19(MSB:Phonetic symbol 19, LSB: Consonant adjustment 19)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL20">
            <summary>
            (0x5026) Phonetic symbol 20(MSB:Phonetic symbol 20, LSB: Consonant adjustment 20)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL21">
            <summary>
            (0x5027) Phonetic symbol 21(MSB:Phonetic symbol 21, LSB: Consonant adjustment 21)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL22">
            <summary>
            (0x5028) Phonetic symbol 22(MSB:Phonetic symbol 22, LSB: Consonant adjustment 22)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL23">
            <summary>
            (0x5029) Phonetic symbol 23(MSB:Phonetic symbol 23, LSB: Consonant adjustment 23)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL24">
            <summary>
            (0x502a) Phonetic symbol 24(MSB:Phonetic symbol 24, LSB: Consonant adjustment 24)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL25">
            <summary>
            (0x502b) Phonetic symbol 25(MSB:Phonetic symbol 25, LSB: Consonant adjustment 25)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL26">
            <summary>
            (0x502c) Phonetic symbol 26(MSB:Phonetic symbol 26, LSB: Consonant adjustment 26)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL27">
            <summary>
            (0x502d) Phonetic symbol 27(MSB:Phonetic symbol 27, LSB: Consonant adjustment 27)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL28">
            <summary>
            (0x502e) Phonetic symbol 28(MSB:Phonetic symbol 28, LSB: Consonant adjustment 28)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL29">
            <summary>
            (0x502f) Phonetic symbol 29(MSB:Phonetic symbol 29, LSB: Consonant adjustment 29)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL30">
            <summary>
            (0x5030) Phonetic symbol 30(MSB:Phonetic symbol 30, LSB: Consonant adjustment 30)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL31">
            <summary>
            (0x5031) Phonetic symbol 31(MSB:Phonetic symbol 31, LSB: Consonant adjustment 31)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL32">
            <summary>
            (0x5032) Phonetic symbol 32(MSB:Phonetic symbol 32, LSB: Consonant adjustment 32)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL33">
            <summary>
            (0x5033) Phonetic symbol 33(MSB:Phonetic symbol 33, LSB: Consonant adjustment 33)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL34">
            <summary>
            (0x5034) Phonetic symbol 34(MSB:Phonetic symbol 34, LSB: Consonant adjustment 34)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL35">
            <summary>
            (0x5035) Phonetic symbol 35(MSB:Phonetic symbol 35, LSB: Consonant adjustment 35)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL36">
            <summary>
            (0x5036) Phonetic symbol 36(MSB:Phonetic symbol 36, LSB: Consonant adjustment 36)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL37">
            <summary>
            (0x5037) Phonetic symbol 37(MSB:Phonetic symbol 37, LSB: Consonant adjustment 37)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL38">
            <summary>
            (0x5038) Phonetic symbol 38(MSB:Phonetic symbol 38, LSB: Consonant adjustment 38)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL39">
            <summary>
            (0x5039) Phonetic symbol 39(MSB:Phonetic symbol 39, LSB: Consonant adjustment 39)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL40">
            <summary>
            (0x503a) Phonetic symbol 40(MSB:Phonetic symbol 40, LSB: Consonant adjustment 40)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL41">
            <summary>
            (0x503b) Phonetic symbol 41(MSB:Phonetic symbol 41, LSB: Consonant adjustment 41)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL42">
            <summary>
            (0x503c) Phonetic symbol 42(MSB:Phonetic symbol 42, LSB: Consonant adjustment 42)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL43">
            <summary>
            (0x503d) Phonetic symbol 43(MSB:Phonetic symbol 43, LSB: Consonant adjustment 43)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL44">
            <summary>
            (0x503e) Phonetic symbol 44(MSB:Phonetic symbol 44, LSB: Consonant adjustment 44)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL45">
            <summary>
            (0x503f) Phonetic symbol 45(MSB:Phonetic symbol 45, LSB: Consonant adjustment 45)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL46">
            <summary>
            (0x5040) Phonetic symbol 46(MSB:Phonetic symbol 46, LSB: Consonant adjustment 46)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL47">
            <summary>
            (0x5041) Phonetic symbol 47(MSB:Phonetic symbol 47, LSB: Consonant adjustment 47)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL48">
            <summary>
            (0x5042) Phonetic symbol 48(MSB:Phonetic symbol 48, LSB: Consonant adjustment 48)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL49">
            <summary>
            (0x5043) Phonetic symbol 49(MSB:Phonetic symbol 49, LSB: Consonant adjustment 49)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL50">
            <summary>
            (0x5044) Phonetic symbol 50(MSB:Phonetic symbol 50, LSB: Consonant adjustment 50)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL51">
            <summary>
            (0x5045) Phonetic symbol 51(MSB:Phonetic symbol 51, LSB: Consonant adjustment 51)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL52">
            <summary>
            (0x5046) Phonetic symbol 52(MSB:Phonetic symbol 52, LSB: Consonant adjustment 52)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL53">
            <summary>
            (0x5047) Phonetic symbol 53(MSB:Phonetic symbol 53, LSB: Consonant adjustment 53)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL54">
            <summary>
            (0x5048) Phonetic symbol 54(MSB:Phonetic symbol 54, LSB: Consonant adjustment 54)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL55">
            <summary>
            (0x5049) Phonetic symbol 55(MSB:Phonetic symbol 55, LSB: Consonant adjustment 55)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL56">
            <summary>
            (0x504a) Phonetic symbol 56(MSB:Phonetic symbol 56, LSB: Consonant adjustment 56)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL57">
            <summary>
            (0x504b) Phonetic symbol 57(MSB:Phonetic symbol 57, LSB: Consonant adjustment 57)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL58">
            <summary>
            (0x504c) Phonetic symbol 58(MSB:Phonetic symbol 58, LSB: Consonant adjustment 58)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL59">
            <summary>
            (0x504d) Phonetic symbol 59(MSB:Phonetic symbol 59, LSB: Consonant adjustment 59)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL60">
            <summary>
            (0x504e) Phonetic symbol 60(MSB:Phonetic symbol 60, LSB: Consonant adjustment 60)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PHONETIC_SYMBOL_CONTINUATION">
            <summary>
            (0x504f) Phonetic symbol continuation(MSB, 0x7f=end, 0x00=continue)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_V1MEAN">
            <summary>
            (0x5050) v1mean in Cent/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_D1MEAN">
            <summary>
            (0x5051) d1mean in millisec/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_D1MEAN_FIRST_NOTE">
            <summary>
            (0x5052) d1meanFirstNote in millisec/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_D2MEAN">
            <summary>
            (0x5053) d2mean in millisec/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_D4MEAN">
            <summary>
            (0x5054) d4mean in millisec/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PMEAN_ONSET_FIRST_NOTE">
            <summary>
            (0x5055) pMeanOnsetFirstNote in Cent/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_VMEAN_NOTE_TRNSITION">
            <summary>
            (0x5056) vMeanNoteTransition in Cent/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_PMEAN_ENDING_NOTE">
            <summary>
            (0x5057) pMeanEndingNote in Cent/5(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_ADD_PORTAMENTO">
            <summary>
            (0x5058) AddScooptoUpIntervals &amp;, AddPortamentoToDownIntervals(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_CHANGE_AFTER_PEAK">
            <summary>
            (0x5059) changAfterPeak(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_ACCENT">
            <summary>
            (0x505a) Accent(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_NM_NOTE_MESSAGE_CONTINUATION">
            <summary>
            (0x507f) Note message continuation(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_VOICE_OVERLAP">
            <summary>
            (0x5075) Extended Note message; Voice Overlap(MSB, LSB)(VoiceOverlap = ((MSB &amp; 0x7f) &lt;&lt; 7) | (LSB &amp; 0x7f) - 8192)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_FLAGS_BYTES">
            <summary>
            (0x5076) Extended Note message; Flags length in bytes(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_FLAGS">
            <summary>
            (0x5077) Extended Note message; Flag(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_FLAGS_CONINUATION">
            <summary>
            (0x5078) Extended Note message; Flag continuation(MSB)(MSB, 0x7f=end, 0x00=continue)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_MODURATION">
            <summary>
            (0x5079) Extended Note message; Moduration(MSB, LSB)(Moduration = ((MSB &amp; 0x7f) &lt;&lt; 7) | (LSB &amp; 0x7f) - 100)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_PRE_UTTERANCE">
            <summary>
            (0x507a) Extended Note message; PreUtterance(MSB, LSB)(PreUtterance = ((MSB &amp; 0x7f) &lt;&lt; 7) | (LSB &amp; 0x7f) - 8192)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_ENV_DATA1">
            <summary>
            (0x507e) Extended Note message; Envelope: value1(MSB, LSB) actual value = (value3.msb &amp; 0xf) &lt;&lt; 28 | (value2.msb &amp; 0x7f) &lt;&lt; 21 | (value2.lsb &amp; 0x7f) &lt;&lt; 14 | (value1.msb &amp; 0x7f) &lt;&lt; 7 | (value1.lsb &amp; 0x7f)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_ENV_DATA2">
            <summary>
            (0x507d) Extended Note message; Envelope: value2(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_ENV_DATA3">
            <summary>
            (0x507c) Extended Note message; Envelope: value3(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CVM_EXNM_ENV_DATA_CONTINUATION">
            <summary>
            (0x507b) Extended Note message; Envelope: data point continuation(MSB)(MSB, 0x7f=end, 0x00=continue)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_BS_VERSION_AND_DEVICE">
            <summary>
            (0x6000) Version number &amp;, Device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_BS_DELAY">
            <summary>
            (0x6001) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_BS_LANGUAGE_TYPE">
            <summary>
            (0x6002) Laugnage type(MSB, optional LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_CV_VERSION_AND_DEVICE">
            <summary>
            (0x6100) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_CV_DELAY">
            <summary>
            (0x6101) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_CV_VOLUME">
            <summary>
            (0x6102) Volume value(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_P_VERSION_AND_DEVICE">
            <summary>
            (0x6200) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_P_DELAY">
            <summary>
            (0x6201) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_PAN">
            <summary>
            (0x6202) Pan value(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_E_VESION_AND_DEVICE">
            <summary>
            (0x6300) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_E_DELAY">
            <summary>
            (0x6301) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_E_EXPRESSION">
            <summary>
            (0x6302) Expression vlaue(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_VR_VERSION_AND_DEVICE">
            <summary>
            (0x6400) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_VR_DELAY">
            <summary>
            (0x6401) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_VR_VIBRATO_RATE">
            <summary>
            (0x6402) Vibrato Rate value(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_VD_VERSION_AND_DEVICE">
            <summary>
            (0x6500) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_VD_DELAY">
            <summary>
            (0x6501) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_VD_VIBRATO_DEPTH">
            <summary>
            (0x6502) Vibrato Depth value(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_FX2_VERSION_AND_DEVICE">
            <summary>
            (0x6600) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_FX2_DELAY">
            <summary>
            (0x6601) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_FX2_EFFECT2_DEPTH">
            <summary>
            (0x6602) Effect2 Depth(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_PBS_VERSION_AND_DEVICE">
            <summary>
            (0x6700) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_PBS_DELAY">
            <summary>
            (0x6701) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.CC_PBS_PITCH_BEND_SENSITIVITY">
            <summary>
            (0x6702) Pitch Bend Sensitivity(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.PC_VERSION_AND_DEVICE">
            <summary>
            (0x5300) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.PC_DELAY">
            <summary>
            (0x5301) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.PC_VOICE_TYPE">
            <summary>
            (0x5302) Voice Type(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.PB_VERSION_AND_DEVICE">
            <summary>
            (0x5400) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.PB_DELAY">
            <summary>
            (0x5401) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.PB_PITCH_BEND">
            <summary>
            (0x5402) Pitch Bend value(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.VCP_VERSION_AND_DEVICE">
            <summary>
            (0x5500) Version number &amp;, device number(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.VCP_DELAY">
            <summary>
            (0x5501) Delay in millisec(MSB, LSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.VCP_VOICE_CHANGE_PARAMETER_ID">
            <summary>
            (0x5502) Voice Change Parameter ID(MSB)
            </summary>
        </member>
        <member name="F:cadencii.vsq.NRPN.VCP_VOICE_CHANGE_PARAMETER">
            <summary>
            (0x5503) Voice Change Parameter value(MSB)
            </summary>
        </member>
        <member name="M:cadencii.vsq.NRPN.getVoiceChangeParameterID(System.String)">
            <summary>
            指定したコントロールに対応するVoice Change Parameter IDの値を調べます
            </summary>
            <param name="curve_name"></param>
            <returns></returns>
        </member>
        <member name="F:cadencii.vsq.PlayMode.Off">
            <summary>
            トラックはミュートされる．(-1)
            </summary>
        </member>
        <member name="F:cadencii.vsq.PlayMode.PlayAfterSynth">
            <summary>
            トラックは合成された後再生される(0)
            </summary>
        </member>
        <member name="F:cadencii.vsq.PlayMode.PlayWithSynth">
            <summary>
            トラックは合成しながら再生される(1)
            </summary>
        </member>
        <member name="F:cadencii.vsq.SingerConfig.VOICEIDSTR">
            <summary>
            VOCALOIDの場合，音源のディレクトリへのパス．
            UTAUの場合，oto.iniが保存されているディレクトリへのパス
            </summary>
        </member>
        <member name="M:cadencii.vsq.SingerConfig.get_quated_string(System.String,System.Int32)">
            <summary>
            位置positionにある'"'から，次に現れる'"'の位置を調べる．エスケープされた\"はスキップされる．'"'が見つからなかった場合-1を返す
            </summary>
            <param name="s"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SingerConfigSys.#ctor(System.String,System.String[])">
            <summary>
            
            </summary>
            <param name="path_voicedb">音源のデータディレクトリ(ex:"C:\Program Files\VOCALOID2\voicedbdir")</param>
            <param name="path_installed_singers">音源のインストールディレクトリ(ex:new String[]{ "C:\Program Files\VOCALOID2\voicedbdir\BXXXXXXXXXXXXXXX", "D:\singers\BNXXXXXXXXXX" })</param>
        </member>
        <member name="M:cadencii.vsq.SingerConfigSys.getSingerID(System.Int32,System.Int32)">
            <summary>
            Gets the VsqID of program change.
            </summary>
            <param name="program_change"></param>
            <returns></returns>        
        </member>
        <member name="M:cadencii.vsq.SingerConfigSys.getSingerInfo(System.Int32,System.Int32)">
            <summary>
            Gets the singer information of pecified program change.
            </summary>
            <param name="program_change"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SingerConfigSys.getSingerConfigs">
            <summary>
            Gets the list of singer configs.
            </summary>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.SymbolTable">
            <summary>
            歌詞から発音記号列を引き当てるための辞書を表現するクラス
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTable.mDict">
            <summary>
            辞書本体
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTable.mName">
            <summary>
            辞書の名前
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTable.mEnabled">
            <summary>
            辞書を有効とするかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTable.mMaxDivisions">
            <summary>
            英単語の分節分割などにより，この辞書を使うことによって最大いくつの発音記号列に分割されるか
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTable.mTable">
            <summary>
            辞書のリスト，辞書の優先順位の順番で格納
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTable.mInitialized">
            <summary>
            VOCALOID2のシステム辞書を読み込んだかどうか
            </summary>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.getMaxDivisions">
            <summary>
            英単語の分節分割などにより，登録されている辞書を使うことによって最大いくつの発音記号列に分割されるか
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.getSymbolTable(System.Int32)">
            <summary>
            指定した優先順位の辞書本体を取得します
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.loadDictionary(System.String,System.String)">
            <summary>
            指定した辞書ファイルを読み込みます。
            </summary>
            <param name="dictionary_file"></param>
            <param name="name"></param>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.loadSystemDictionaries">
            <summary>
            VOCALOID2システムが使用する辞書を読み込みます。
            </summary>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.loadAllDictionaries(System.String)">
            <summary>
            指定したディレクトリにある拡張辞書ファイル(拡張子*.eudc)を全て読み込みます
            </summary>
            <param name="directory"></param>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.attatch(System.String)">
            <summary>
            指定した歌詞から、発音記号列を引き当てます
            </summary>
            <param name="phrase"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.getCount">
            <summary>
            登録されている辞書の個数を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.changeOrder(cadencii.java.util.Vector{cadencii.ValuePair{System.String,System.Boolean}})">
            <summary>
            辞書の優先順位と有効・無効を一括設定します
            </summary>
            <param name="list">辞書の名前・有効かどうかを表したValuePairを、辞書の優先順位の順番に格納したリスト</param>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.Clone">
            <summary>
            この辞書のディープ・コピーを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.clone">
            <summary>
            この辞書のディープ・コピーを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.#ctor">
            <summary>
            使ってはいけないコンストラクタ
            </summary>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.getName">
            <summary>
            辞書の名前を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.isEnabled">
            <summary>
            辞書が有効かどうかを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.setEnabled(System.Boolean)">
            <summary>
            辞書が有効かどうかを設定します
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.#ctor(System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            コンストラクタ
            </summary>
            <param name="path">読み込む辞書ファイルのパス</param>
            <param name="is_udc_mode">VOCALOID2仕様の辞書ファイルかどうか</param>
            <param name="enabled">辞書ファイルを有効とするかどうか</param>
            <param name="encoding">辞書ファイルのテキストエンコーディング</param>
        </member>
        <member name="M:cadencii.vsq.SymbolTable.attatchImp(System.String)">
            <summary>
            指定した文字列から、発音記号列を引き当てます
            </summary>
            <param name="phrase"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.SymbolTableEntry">
            <summary>
            SymbolTableの要素を表すクラス。
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTableEntry.Word">
            <summary>
            単語（英語の場合、分節位置にハイフンが入る）
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTableEntry.m_raw_symbol">
            <summary>
            発音記号列．タブ記号を含む形式
            </summary>
        </member>
        <member name="F:cadencii.vsq.SymbolTableEntry.m_symbol">
            <summary>
            発音記号列．タブ記号を含まない形式
            </summary>
        </member>
        <member name="M:cadencii.vsq.SymbolTableEntry.getSymbol">
            <summary>
            発音記号列を取得します．発音記号列は空白' 'で区切られています．
            英単語の分節の分割位置を知るには，このメソッドの代わりにgetRawSymbolメソッドを呼び出し，
            タブ記号の位置を調べてください．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTableEntry.getRawSymbol">
            <summary>
            発音記号列を取得します．発音記号列は空白' 'またはタブ'\t'で区切られています．
            タブによる区切りは英単語の分節の分割位置を表し，
            空白による区切りは分節中に複数の発音記号がある場合の区切りを表します．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTableEntry.getParsedSymbol">
            <summary>
            このオブジェクトのSymbolフィールドのタブ文字を空白に置き換えた文字列を取得します．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTableEntry.clone">
            <summary>
            このオブジェクトのディープ・コピーを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.SymbolTableEntry.Clone">
            <summary>
            このオブジェクトのディープ・コピーを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="P:cadencii.vsq.SymbolTableEntry.Symbol">
            <summary>
            発音記号列を取得します．発音記号列は空白' 'またはタブ'\t'で区切られています．
            タブによる区切りは英単語の分節の分割位置を表し，
            空白による区切りは分節中に複数の発音記号がある場合の区切りを表します．
            </summary>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.TempoVector">
            <summary>
            テンポ情報を格納したテーブル．
            </summary>
        </member>
        <member name="F:cadencii.vsq.TempoVector.gatetimePerQuater">
            <summary>
            4分音符1拍あたりのゲートタイム
            </summary>
        </member>
        <member name="F:cadencii.vsq.TempoVector.baseTempo">
            <summary>
            デフォルトのテンポ値(4分音符1拍あたりのマイクロ秒)
            </summary>
        </member>
        <member name="M:cadencii.vsq.TempoVector.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:cadencii.vsq.TempoVector.getClockFromSec(System.Double)">
            <summary>
            指定した時刻におけるゲートタイムを取得します
            </summary>
            <param name="time">ゲートタイムを取得する時刻(秒)</param>
            <returns>ゲートタイム</returns>
        </member>
        <member name="M:cadencii.vsq.TempoVector.getClockFromSec(System.Double,cadencii.vsq.TempoVectorSearchContext)">
            <summary>
            指定した時刻におけるゲートタイムを取得します．
            このメソッドでは検索コンテキストを用い，取得したいtimeの値が順に大きくなる状況でこのメソッドの実行速度の高速化を図ります
            </summary>
            <param name="time">ゲートタイムを取得する時刻(秒)</param>
            <param name="context">計算を高速化するための検索コンテキスト</param>
            <returns>ゲートタイム</returns>
        </member>
        <member name="M:cadencii.vsq.TempoVector.updateTempoInfo">
            <summary>
            このテーブルに登録されているテンポ変更イベントのうち、時刻に関する情報を再計算します。
            新しいテンポ変更イベントを登録したり、既存のイベントを変更した場合に、都度呼び出す必要があります
            </summary>
        </member>
        <member name="M:cadencii.vsq.TempoVector.getSecFromClock(System.Double)">
            <summary>
            指定したゲートタイムにおける時刻を取得します
            </summary>
            <param name="clock">時刻を取得するゲートタイム</param>
            <returns>時刻(秒)</returns>
        </member>
        <member name="T:cadencii.vsq.TempoVectorSearchContext">
            <summary>
            テンポテーブルに基づき，時刻とゲートタイムを相互変換する際の検索量を小さくするための検索コンテキスト
            </summary>
        </member>
        <member name="M:cadencii.vsq.TimesigVector.updateTimesigInfo">
            <summary>
            TimeSigTableの[*].Clockの部分を更新します
            </summary>
        </member>
        <member name="M:cadencii.vsq.TimesigVector.getClockFromBarCount(System.Int32)">
            <summary>
            指定した小節の開始クロックを調べます。ここで使用する小節数は、プリメジャーを考慮しない。即ち、曲頭の小節が0である。
            </summary>
            <param name="bar_count"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.TimesigVector.getBarCountFromClock(System.Int32)">
            <summary>
            指定したクロックが、曲頭から何小節目に属しているかを調べます。ここで使用する小節数は、プリメジャーを考慮しない。即ち、曲頭の小節が0である。
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.UstEnvelope">
            <summary>
            UTAUスクリプト形式で使用されるエンベロープのデータ点を表現します
            </summary>
        </member>
        <member name="M:cadencii.vsq.UstEnvelope.#ctor">
            <summary>
            コンストラクタ．デフォルトのエンベロープを構成します
            </summary>
        </member>
        <member name="M:cadencii.vsq.UstEnvelope.#ctor(System.String)">
            <summary>
            UTAUスクリプト形式に記録されているエンベロープの表現に基づき，インスタンスを構成します
            </summary>
            <param name="line">ustに記録されるエンベロープの記述行</param>
        </member>
        <member name="M:cadencii.vsq.UstEnvelope.clone">
            <summary>
            このインスタンスのディープコピーを作成します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEnvelope.Clone">
            <summary>
            このインスタンスのディープコピーを作成します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEnvelope.ToString">
            <summary>
            このインスタンスの文字列表現を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEnvelope.toString">
            <summary>
            このインスタンスの文字列表現を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="F:cadencii.vsq.UstEvent.MAX_INTENSITY">
            <summary>
            音量の最大値
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstEvent.MIN_INTENSITY">
            <summary>
            音量の最小値
            </summary>
        </member>
        <member name="M:cadencii.vsq.UstEvent.getStartPoint">
            <summary>
            StartPointの値を取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEvent.setStartPoint(System.Single)">
            <summary>
            StartPoinの値を設定します
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.UstEvent.isStartPointSpecified">
            <summary>
            StartPointプロパティが設定されているかどうかを表す値を取得します．
            この値がfalseの場合，getStartPointで得られる値は不定です
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEvent.isLengthSpecified">
            <summary>
            Lengthプロパティが設定されているかどうかを表す値を取得します．
            この値がfalseの場合，getLengthで得られる値は不定です
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEvent.getLength">
            <summary>
            このイベントの長さを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEvent.setLength(System.Int32)">
            <summary>
            このイベントの長さを設定します
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.UstEvent.equalsForSynth(cadencii.vsq.UstEvent)">
            <summary>
            このインスタンスと指定したアイテムが，歌声合成の観点から等しいかどうかを調べます
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstEvent.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:cadencii.vsq.UstEvent.Length">
            <summary>
            XML用
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFile.PREV_INDEX">
            <summary>
            [#PREV]が指定されているUstEventのIndex
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFile.NEXT_INDEX">
            <summary>
            [#NEXT]が指定されているUstEventのIndex
            </summary>
        </member>
        <member name="M:cadencii.vsq.UstFile.#ctor(cadencii.vsq.VsqFile,System.Int32,cadencii.java.util.TreeMap{System.Int32,System.Int32})">
            <summary>
            vsqの指定したトラックを元に，トラックを1つだけ持つustを構築します
            </summary>
            <param name="vsq"></param>
            <param name="track_index"></param>
            <param name="id_map">UstEventのIndexフィールドと、元になったVsqEventのInternalIDを対応付けるマップ。キーがIndex、値がInternalIDを表す</param>
        </member>
        <member name="M:cadencii.vsq.UstFile.updateTempoInfo">
            <summary>
            TempoTableの[*].Timeの部分を更新します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.UstFile.getSecFromClock(System.Int32)">
            <summary>
            指定したクロックにおける、clock=0からの演奏経過時間(sec)
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.UstFileWriteOptions">
            <summary>
            UstFileクラスのwriteメソッドで出力する際の詳細オプションを表します
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.trackEnd">
            <summary>
            [#TRACKEND]セクションを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingTempo">
            <summary>
            [#SETTING]セクションのTempoエントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingTracks">
            <summary>
            [#SETTING]セクションのTracksエントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingProjectName">
            <summary>
            [#SETTING]セクションのProjectNameエントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingVoiceDir">
            <summary>
            [#SETTING]セクションのVoiceDirエントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingOutFile">
            <summary>
            [#SETTING]セクションのOutFileエントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingCacheDir">
            <summary>
            [#SETTING]セクションのCacheDirエントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingTool1">
            <summary>
            [#SETTING]セクションのTool1エントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstFileWriteOptions.settingTool2">
            <summary>
            [#SETTING]セクションのTool2エントリーを出力するかどうか
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstPortamento.mUnknownInt">
            <summary>
            PBSの末尾のセミコロンの後ろについている整数
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstPortamento.mIsUnknownIntSpecified">
            <summary>
            mUnknownIntが設定されているかどうか
            </summary>
        </member>
        <member name="M:cadencii.vsq.UstPortamento.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="F:cadencii.vsq.UstPortamentoType.S">
            <summary>
            S型．表記は''(空文字)
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstPortamentoType.Linear">
            <summary>
            直線型．表記は's'
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstPortamentoType.R">
            <summary>
            R型．表記は'r'
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstPortamentoType.J">
            <summary>
            J型．表記は'j'
            </summary>
        </member>
        <member name="M:cadencii.vsq.UstTrack.findEventFromIndex(System.Int32)">
            <summary>
            指定したindex値を持つイベントを検索します
            </summary>
            <param name="index">検索するindex値</param>
            <returns>見つからなかったらnullを返す</returns>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.Length">
            <summary>
            音符の長さに対する、パーセントで表したビブラートの長さ。
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.Period">
            <summary>
            ミリセカンドで表したビブラートによるピッチ振動の周期
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.Depth">
            <summary>
            Centで表した、ビブラートによるピッチ振動の振幅。Peak to Peakは2*Depthとなる。
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.In">
            <summary>
            ビブラート長さに対する、パーセントで表したピッチ振動のフェードインの長さ。
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.Out">
            <summary>
            ビブラートの長さに対するパーセントで表したピッチ振動のフェードアウトの長さ。
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.Phase">
            <summary>
            ピッチ振動開始時の位相。2PIに対するパーセントで表す。
            </summary>
        </member>
        <member name="F:cadencii.vsq.UstVibrato.Shift">
            <summary>
            ピッチ振動の中心値と、音符の本来の音の高さからのずれ。Depthに対するパーセントで表す。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VibratoBPList.equals(cadencii.vsq.VibratoBPList)">
            <summary>
            このインスタンスと，指定したVibratoBPListのインスタンスが等しいかどうかを調べます
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:cadencii.vsq.VibratoBPList.Data">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="T:cadencii.vsq.ExpressionConfigSys">
            <summary>
            VOCALOID1またはVOCALOID2の、表情ライブラリの設定値を表します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.getVocaloid1Default">
            <summary>
            VOCALOID1システムのデフォルトの表情ライブラリの設定値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.getVocaloid2Default">
            <summary>
            VOCALOID2システムのデフォルトの表情ライブラリの設定値を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.getVibratoConfigCount">
            <summary>
            登録されているビブラート設定の個数を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.getAttackConfigCount">
            <summary>
            登録されているアタック設定の個数を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.getDynamicsConfigCount">
            <summary>
            登録されている強弱記号設定の個数を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.vibratoConfigIterator">
            <summary>
            登録されているビブラート設定を順に返す反復子を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.attackConfigIterator">
            <summary>
            登録されているアタック設定を順に返す反復子を取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.dynamicsConfigIterator">
            <summary>
            登録されている強弱記号設定を順に返す反復子を返します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.ExpressionConfigSys.#ctor(System.String,System.String)">
            <summary>
            VOCALOID(1/2)エディタの実行ファイルのパスと、表情ライブラリのディレクトリのパスを元に、新しい表情ライブラリ設定を構築します。
            </summary>
            <param name="path_editor"></param>
            <param name="path_expdb"></param>
        </member>
        <member name="T:cadencii.vsq.VibratoHandle">
            <summary>
            ビブラートハンドル
            </summary>
        </member>
        <member name="M:cadencii.vsq.VibratoHandle.equals(cadencii.vsq.VibratoHandle)">
            <summary>
            このインスタンスと，指定したVibratoHandleのインスタンスが等しいかどうかを調べます
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:cadencii.vsq.VibratoHandle.Caption">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.VibratoHandle.RateBP">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.VibratoHandle.StartRate">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.VibratoHandle.DepthBP">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.VibratoHandle.StartDepth">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="P:cadencii.vsq.VibratoHandle.Length">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="T:cadencii.vsq.VocaloSysUtil">
            <summary>
            VOCALOID / VOCALOID2システムについての情報を取得するユーティリティ。
            </summary>
        </member>
        <member name="F:cadencii.vsq.VocaloSysUtil.defaultDseVersion">
            <summary>
            VOCALOID1の、デフォルトのSynthesize Engineバージョン。1.0の場合100, 1.1の場合101。規定では100(1.0)。
            initメソッドにおいて、VOCALOID.iniから読み取る
            </summary>
        </member>
        <member name="F:cadencii.vsq.VocaloSysUtil.dseVersion101Available">
            <summary>
            VOCALOID1にて、バージョン1.1のSynthesize Engineが利用可能かどうか。
            既定ではfalse。DSE1_1.dllが存在するかどうかで判定。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.isDSEVersion101Available">
            <summary>
            VOCALOID1にて、バージョン1.1のSynthesize Engineが利用可能かどうか。
            既定ではfalse。DSE1_1.dllが存在するかどうかで判定。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getDefaultDseVersion">
            <summary>
            VOCALOID1の、デフォルトのSynthesize Engineバージョンを取得します。
            1.0の場合100, 1.1の場合101。規定では100(1.0)。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.init">
            <summary>
            インストールされているVOCALOID / VOCALOID2についての情報を読み込み、初期化します．
            C#はこっちを呼べばOK
            </summary>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.combineWinePath(System.String,System.String)">
            <summary>
            WINEPREFIXと，その内部のWindows形式の絶対パスを結合し，実際のファイルの絶対パスを取得します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.init(cadencii.java.util.Vector{System.String},System.String)">
            <summary>
            Windowsのレジストリ・エントリを列挙した文字列のリストを指定し，初期化します
            パラメータreg_listの中身は，例えば
            "HKLM\SOFTWARE\VOCALOID2\DATABASE\EXPRESSION\\tEXPRESSIONDIR\\tC:\Program Files\VOCALOID2\expdbdir"
            のような文字列です．
            </summary>
            <param name="reg_list">レジストリ・エントリのリスト</param>
            <param name="wine_prefix">wineを使う場合，WINEPREFIXを指定する．そうでなければ空文字を指定</param>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getDefaultVibratoHandle(System.String,System.Int32,cadencii.vsq.SynthesizerType)">
            <summary>
            ビブラートのプリセットタイプから，VibratoHandleを作成します
            </summary>
            <param name="icon_id"></param>
            <param name="vibrato_length"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.initPrint(System.String,System.String,cadencii.java.util.Vector{System.String})">
            <summary>
            レジストリkey内の値を再帰的に検索し、ファイルfpに順次出力する
            </summary>
            <param name="reg_key_name"></param>
            <param name="parent_name"></param>
            <param name="list"></param>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.attackConfigIterator(cadencii.vsq.SynthesizerType)">
            <summary>
            アタック設定を順に返す反復子を取得します。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.vibratoConfigIterator(cadencii.vsq.SynthesizerType)">
            <summary>
            ビブラート設定を順に返す反復子を取得します。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.dynamicsConfigIterator(cadencii.vsq.SynthesizerType)">
            <summary>
            強弱記号設定を順に返す反復子を取得します。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getOriginalSinger(System.Int32,System.Int32,cadencii.vsq.SynthesizerType)">
            <summary>
            指定した歌声合成システムに登録されている指定した名前の歌手について、その派生元の歌手名を取得します。
            </summary>
            <param name="language"></param>
            <param name="program"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getSingerID(System.Int32,System.Int32,cadencii.vsq.SynthesizerType)">
            <summary>
            指定した歌声合成システムに登録されている指定した名前の歌手について、その歌手を表現するVsqIDのインスタンスを取得します。
            </summary>
            <param name="language"></param>
            <param name="program"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getEditorPath(cadencii.vsq.SynthesizerType)">
            <summary>
            指定した歌声合成システムの、エディタの実行ファイルのパスを取得します。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getDllPathVsti(cadencii.vsq.SynthesizerType)">
            <summary>
            指定した歌声合成システムの、VSTi DLL本体のパスを取得します。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getSingerConfigs(cadencii.vsq.SynthesizerType)">
            <summary>
            指定された歌声合成システムに登録されている歌手設定のリストを取得します。
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getLanguageFromName(System.String)">
            <summary>
            指定した名前の歌手の歌唱言語を取得します。
            </summary>
            <param name="name">name of singer</param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getAmplifyCoeffFromPanLeft(System.Int32)">
            <summary>
            指定したPAN値における、左チャンネルの増幅率を取得します。
            </summary>
            <param name="pan"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getAmplifyCoeffFromPanRight(System.Int32)">
            <summary>
            指定したPAN値における、右チャンネルの増幅率を取得します。
            </summary>
            <param name="pan"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VocaloSysUtil.getAmplifyCoeffFromFeder(System.Int32)">
            <summary>
            指定したFEDER値における、増幅率を取得します。
            </summary>
            <param name="feder"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.VsqCommon">
            <summary>
            vsqファイルのメタテキストの[Common]セクションに記録される内容を取り扱う
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqCommon.DynamicsMode">
            <summary>
            Dynamicsカーブを表示するモード(Expert)なら1、しない(Standard)なら0。
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqCommon.PlayMode">
            <summary>
            Play With Synthesisなら1、Play After Synthesiなら0、Offなら-1。
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqCommon.LastPlayMode">
            <summary>
            PlayModeがOff(-1)にされる直前に，PlayAfterSynthかPlayWithSynthのどちらが指定されていたかを記憶しておく．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqCommon.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            各パラメータを指定したコンストラクタ
            </summary>
            <param name="name">トラック名</param>
            <param name="color">Color値（意味は不明）</param>
            <param name="dynamics_mode">DynamicsMode（デフォルトは1）</param>
            <param name="play_mode">PlayMode（デフォルトは1）</param>
        </member>
        <member name="M:cadencii.vsq.VsqCommon.#ctor(cadencii.vsq.TextStream,cadencii.ByRef{System.String})">
            <summary>
            MetaTextのテキストファイルからのコンストラクタ
            </summary>
            <param name="sr">読み込むテキストファイル</param>
            <param name="last_line">読み込んだ最後の行が返される</param>
        </member>
        <member name="M:cadencii.vsq.VsqCommon.write(cadencii.vsq.ITextWriter)">
            <summary>
            インスタンスの内容をテキストファイルに出力します
            </summary>
            <param name="sw">出力先</param>
        </member>
        <member name="T:cadencii.vsq.VsqEventList">
            <summary>
            固有ID付きのVsqEventのリストを取り扱う
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqEventList.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqEventList.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.VsqHandle">
            <summary>
            ハンドルを取り扱います。ハンドルにはLyricHandle、VibratoHandle、IconHandleおよびNoteHeadHandleがある
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqHandle.addQuotationMark">
            <summary>
            歌詞・発音記号列の前後にクォーテーションマークを付けるかどうか
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.castFromIconHandle(cadencii.vsq.IconHandle)">
            <summary>
            歌手設定のインスタンスを、VsqHandleに型キャストします。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.write(cadencii.vsq.ITextWriter)">
            <summary>
            インスタンスをストリームに書き込みます。
            encode=trueの場合、2バイト文字をエンコードして出力します。
            </summary>
            <param name="sw">書き込み対象</param>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.#ctor(cadencii.vsq.TextStream,System.Int32,cadencii.ByRef{System.String})">
            <summary>
            FileStreamから読み込みながらコンストラクト
            </summary>
            <param name="sr">読み込み対象</param>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.HandleIndexFromString(System.String)">
            <summary>
            ハンドル指定子（例えば"h#0123"という文字列）からハンドル番号を取得します
            </summary>
            <param name="_string">ハンドル指定子</param>
            <returns>ハンドル番号</returns>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.print(cadencii.java.io.BufferedWriter)">
            <summary>
            インスタンスをテキストファイルに出力します
            </summary>
            <param name="sw">出力先</param>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.print">
            <summary>
            インスタンスをコンソール画面に出力します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqHandle.toString">
            <summary>
            インスタンスを文字列に変換します
            </summary>
            <returns>インスタンスを変換した文字列</returns>
        </member>
        <member name="T:cadencii.vsq.VsqID">
            <summary>
            メタテキストに埋め込まれるIDを表すクラス。
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqID.MAX_NOTE_MILLISEC_LENGTH">
            <summary>
            ミリ秒で表した、音符の最大長さ
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqID.isFallPortamento">
            <summary>
            下行形でポルタメントを付加するかどうかを取得する
            </summary>
            <returns>下行形でポルタメントを付加するかどうか</returns>
        </member>
        <member name="M:cadencii.vsq.VsqID.setFallPortamento(System.Boolean)">
            <summary>
            下行形でポルタメントを付加するかどうかを設定する
            </summary>
            <param name="value">下行形でポルタメントを付加するかどうか</param>
        </member>
        <member name="M:cadencii.vsq.VsqID.isRisePortamento">
            <summary>
            上行形でポルタメントを付加するかどうかを取得する
            </summary>
            <returns>上行形でポルタメントを付加するかどうか</returns>
        </member>
        <member name="M:cadencii.vsq.VsqID.setRisePortamento(System.Boolean)">
            <summary>
            上行形でポルタメントを付加するかどうかを設定する
            </summary>
            <param name="value">上行形でポルタメントを付加するかどうか</param>
        </member>
        <member name="M:cadencii.vsq.VsqID.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqID.clone">
            <summary>
            このインスタンスの簡易コピーを取得します。
            </summary>
            <returns>このインスタンスの簡易コピー</returns>
        </member>
        <member name="M:cadencii.vsq.VsqID.#ctor(System.Int32)">
            <summary>
            IDの番号（ID#****の****）を指定したコンストラクタ。
            </summary>
            <param name="a_value">IDの番号</param>
        </member>
        <member name="M:cadencii.vsq.VsqID.#ctor(cadencii.vsq.TextStream,System.Int32,cadencii.ByRef{System.String})">
            <summary>
            テキストファイルからのコンストラクタ
            </summary>
            <param name="sr">読み込み対象</param>
            <param name="value"></param>
            <param name="last_line">読み込んだ最後の行が返されます</param>
        </member>
        <member name="T:cadencii.vsq.VsqMaster">
            <summary>
            vsqファイルのメタテキストの[Master]に記録される内容を取り扱う
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMaster.#ctor(System.Int32)">
            <summary>
            プリメジャー値を指定したコンストラクタ
            </summary>
            <param name="pre_measure"></param>
        </member>
        <member name="M:cadencii.vsq.VsqMaster.#ctor(cadencii.vsq.TextStream,cadencii.ByRef{System.String})">
            <summary>
            テキストファイルからのコンストラクタ
            </summary>
            <param name="sr">読み込み元</param>
            <param name="last_line">最後に読み込んだ行が返されます</param>
        </member>
        <member name="M:cadencii.vsq.VsqMaster.write(cadencii.vsq.ITextWriter)">
            <summary>
            インスタンスの内容をテキストファイルに出力します
            </summary>
            <param name="sw">出力先</param>
        </member>
        <member name="T:cadencii.vsq.VsqMetaText">
            <summary>
            vsqのメタテキストの中身を処理するためのクラス
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.PIT">
            <summary>
            PIT。ピッチベンド(pitchBendBPList)。default=0
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.PBS">
            <summary>
            PBS。ピッチベンドセンシティビティ(pitchBendSensBPList)。dfault=2
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.DYN">
            <summary>
            DYN。ダイナミクス(dynamicsBPList)。default=64
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.BRE">
            <summary>
            BRE。ブレシネス(epRResidualBPList)。default=0
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.BRI">
            <summary>
            BRI。ブライトネス(epRESlopeBPList)。default=64
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.CLE">
            <summary>
            CLE。クリアネス(epRESlopeDepthBPList)。default=0
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.harmonics">
            <summary>
            Harmonics。(EpRSineBPList)default = 64
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.fx2depth">
            <summary>
            Effect2 Depth。
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.GEN">
            <summary>
            GEN。ジェンダーファクター(genderFactorBPList)。default=64
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.POR">
            <summary>
            POR。ポルタメントタイミング(portamentoTimingBPList)。default=64
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMetaText.OPE">
            <summary>
            OPE。オープニング(openingBPList)。default=127
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.getCurve(System.Int32)">
            <summary>
            Editor画面上で上からindex番目のカーブを表すBPListを求めます
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.getCurveName(System.Int32)">
            <summary>
            Editor画面上で上からindex番目のカーブの名前を調べます
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.getSinger">
            <summary>
            Singerプロパティに指定されている
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.getIndexOfEOS">
            <summary>
            EOSイベントが記録されているクロックを取得します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.buildHandleList">
            <summary>
            このインスタンスから、Handleのリストを作成すると同時に、Eventsに登録されているVsqEventのvalue値および各ハンドルのvalue値を更新します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.print(cadencii.vsq.ITextWriter,System.Int32,System.Int32)">
            <summary>
            このインスタンスの内容を指定されたファイルに出力します。
            </summary>
            <param name="sw"></param>
            <param name="encode"></param>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.#ctor">
            <summary>
            何も無いVsqMetaTextを構築する。これは、Master Track用のMetaTextとしてのみ使用されるべき
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.#ctor(System.String,System.String)">
            <summary>
            最初のトラック以外の一般のメタテキストを構築。(Masterが作られない)
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMetaText.#ctor(System.String,System.String,System.Int32)">
            <summary>
            最初のトラックのメタテキストを構築。(Masterが作られる)
            </summary>
            <param name="pre_measure"></param>
        </member>
        <member name="T:cadencii.vsq.VsqMixer">
            <summary>
            vsqファイルのメタテキストの[Mixer]セクションに記録される内容を取り扱う
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqMixer.Slave">
            <summary>
            vsqファイルの各トラックのfader, panpot, muteおよびoutputmode値を保持します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMixer.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqMixer.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            各パラメータを指定したコンストラクタ
            </summary>
            <param name="master_fader">MasterFader値</param>
            <param name="master_panpot">MasterPanpot値</param>
            <param name="master_mute">MasterMute値</param>
            <param name="output_mode">OutputMode値</param>
        </member>
        <member name="M:cadencii.vsq.VsqMixer.#ctor(cadencii.vsq.TextStream,cadencii.ByRef{System.String})">
            <summary>
            テキストファイルからのコンストラクタ
            </summary>
            <param name="sr">読み込み対象</param>
            <param name="last_line">最後に読み込んだ行が返されます</param>
        </member>
        <member name="M:cadencii.vsq.VsqMixer.write(cadencii.vsq.ITextWriter)">
            <summary>
            このインスタンスをテキストファイルに出力します
            </summary>
            <param name="sw">出力対象</param>
        </member>
        <member name="T:cadencii.vsq.VsqMixerEntry">
            <summary>
            VsqMixerのSlave要素に格納される各エントリ
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqMixerEntry.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            各パラメータを指定したコンストラクタ
            </summary>
            <param name="feder">Feder値</param>
            <param name="panpot">Panpot値</param>
            <param name="mute">Mute値</param>
            <param name="solo">Solo値</param>
        </member>
        <member name="F:cadencii.vsq.TimeSigTableEntry.Clock">
            <summary>
            クロック数
            </summary>
        </member>
        <member name="F:cadencii.vsq.TimeSigTableEntry.Numerator">
            <summary>
            拍子の分子
            </summary>
        </member>
        <member name="F:cadencii.vsq.TimeSigTableEntry.Denominator">
            <summary>
            拍子の分母
            </summary>
        </member>
        <member name="F:cadencii.vsq.TimeSigTableEntry.BarCount">
            <summary>
            何小節目か
            </summary>
        </member>
        <member name="T:cadencii.vsq.VsqBPList">
            <summary>
            コントロールカーブのデータ点リスト
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタ。デフォルト値はココで指定する。
            </summary>
            <param name="default_value"></param>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.getDefault">
            <summary>
            このBPListのデフォルト値を取得します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.renumberIDs">
            <summary>
            データ点のIDを一度クリアし，新たに番号付けを行います．
            IDは，Redo,Undo用コマンドが使用するため，このメソッドを呼ぶとRedo,Undo操作が破綻する．XMLからのデシリアライズ直後のみ使用するべき．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.clone">
            <summary>
            このVsqBPListの同一コピーを作成します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.getMaximum">
            <summary>
            このリストに設定された最大値を取得します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.getMinimum">
            <summary>
            このリストに設定された最小値を取得します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.move(System.Int32,System.Int32,System.Int32)">
            <summary>
            時刻clockのデータを時刻new_clockに移動します。
            時刻clockにデータがなければ何もしない。
            時刻new_clockに既にデータがある場合、既存のデータは削除される。
            </summary>
            <param name="clock"></param>
            <param name="new_clock"></param>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.findElement(System.Int64)">
            <summary>
            指定したid値を持つVsqBPPairを検索し、その結果を返します。
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.print(cadencii.java.io.BufferedWriter,System.Int32,System.String)">
            <summary>
            このBPListの内容をテキストファイルに書き出します
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.print(cadencii.vsq.ITextWriter,System.Int32,System.String)">
            <summary>
            このBPListの内容をテキストファイルに書き出します
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.appendFromText(cadencii.vsq.TextStream)">
            <summary>
            テキストファイルからデータ点を読込み、現在のリストに追加します
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.findIndexFromClock(System.Int32)">
            <summary>
            指定した時刻にあるデータ点のインデックスを検索します．
            見つかればインデックスを，そうでなければ-1を返します．
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqBPList.addWithoutSort(System.Int32,System.Int32)">
            <summary>
            並べ替え，既存の値との重複チェックを行わず，リストの末尾にデータ点を追加する
            </summary>
            <param name="clock"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:cadencii.vsq.VsqBPList.Data">
            <summary>
            XMLシリアライズ用
            </summary>
        </member>
        <member name="T:cadencii.vsq.VsqCommand">
            <summary>
            
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqCommand.Args">
            <summary>
            コマンドの処理内容を保持します。Args具体的な内容は、処理するクラスごとに異なります
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqCommand.Children">
            <summary>
            後続するコマンド
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqCommand.Parent">
            <summary>
            このコマンドの親
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.#ctor">
            <summary>
            VsqCommandはgenerateCommand*からコンストラクトしなければならない。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandAddTrack(cadencii.vsq.VsqTrack,cadencii.vsq.VsqMixerEntry,System.Int32)">
            <summary>
            トラックを追加するコマンドを発行します．trackはClone()して渡さなくてもよい
            </summary>
            <param name="track"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandTrackChangeName(System.Int32,System.String)">
            <summary>
            トラック名を変更するコマンドを作成します
            </summary>
            <param name="track"></param>
            <param name="new_name"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeClockAndIDContaintsRange(System.Int32,System.Int32[],System.Int32[],cadencii.vsq.VsqID[])">
            <summary>
            VsqIDとClockを同時に変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_ids"></param>
            <param name="clocks"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeClockAndIDContaints(System.Int32,System.Int32,System.Int32,cadencii.vsq.VsqID)">
            <summary>
            VsqIDとClockを同時に変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="clock"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeIDContaintsRange(System.Int32,System.Int32[],cadencii.vsq.VsqID[])">
            <summary>
            VsqIDの内容を変更するコマンドを発行します。
            </summary>
            <param name="track"></param>
            <param name="internal_ids"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeIDContaints(System.Int32,System.Int32,cadencii.vsq.VsqID)">
            <summary>
            VsqIDの内容を変更するコマンドを発行します。
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeClockAndLength(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ノートの長さを変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="new_clock"></param>
            <param name="new_length"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeLength(System.Int32,System.Int32,System.Int32)">
            <summary>
            ノートの長さを変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="new_length"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeVelocity(System.Int32,cadencii.java.util.Vector{cadencii.ValuePair{System.Int32,System.Int32}})">
            <summary>
            指定したトラックの，音符のベロシティ(VEL)を変更するコマンドを発行します．
            リストvelocityには，音符を指定するInteralIDと，変更したいベロシティの値のペアを登録します
            </summary>
            <param name="track"></param>
            <param name="velocity"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeAccent(System.Int32,cadencii.java.util.Vector{cadencii.ValuePair{System.Int32,System.Int32}})">
            <summary>
            指定したトラックの、音符のアクセント(Accent)を変更するコマンドを発行します。
            リストaccent_listには、音符を指定するInternalIDと、変更したいアクセント値のペアを登録します
            </summary>
            <param name="track"></param>
            <param name="accent_list"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeDecay(System.Int32,cadencii.java.util.Vector{cadencii.ValuePair{System.Int32,System.Int32}})">
            <summary>
            指定したトラックの、音符のディケイ(Decay)を変更するコマンドを発行します。
            リストdecay_listには、音符を指定するInternalIDと、変更したいディケイ値のペアを登録します
            </summary>
            <param name="track"></param>
            <param name="decay_list"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandTrackCurveEdit(System.Int32,System.String,cadencii.java.util.Vector{cadencii.vsq.BPPair})">
            <summary>
            vsqファイルのカーブを編集するコマンドを発行します．
            </summary>
            <param name="track"></param>
            <param name="target"></param>
            <param name="edit"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandTrackCurveEdit2(System.Int32,System.String,cadencii.java.util.Vector{System.Int64},cadencii.java.util.TreeMap{System.Int32,cadencii.vsq.VsqBPPair})">
            <summary>
            コントロールカーブを編集するコマンドを発行します．
            </summary>
            <param name="track">編集対象のコントロールカーブが含まれるトラックの番号</param>
            <param name="target">編集対象のコントロールカーブ名</param>
            <param name="delete">削除を行うデータ点のリスト</param>
            <param name="add_or_move">追加または移動を行うデータ点のリスト</param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandTrackCurveEdit2All(System.Int32,cadencii.java.util.Vector{System.String},cadencii.java.util.Vector{cadencii.java.util.Vector{System.Int64}},cadencii.java.util.Vector{cadencii.java.util.TreeMap{System.Int32,cadencii.vsq.VsqBPPair}})">
            <summary>
            コントロールカーブを編集するコマンドを発行します．
            </summary>
            <param name="track">編集対象のコントロールカーブが含まれるトラックの番号</param>
            <param name="target">編集対象のコントロールカーブ名</param>
            <param name="delete">削除を行うデータ点のリスト</param>
            <param name="add_or_move">追加または移動を行うデータ点のリスト</param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeLyric(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            特定位置のイベントの歌詞と発音記号を変更するコマンドを発行します。
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="phrase"></param>
            <param name="phonetic_symbol"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeClock(System.Int32,System.Int32,System.Int32)">
            <summary>
            ノートのクロック位置を変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventDelete(System.Int32,System.Int32)">
            <summary>
            ノートを削除するコマンドを発行します
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventAdd(System.Int32,cadencii.vsq.VsqEvent)">
            <summary>
            ノートを追加するコマンドを発行します。
            </summary>
            <param name="track"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeNote(System.Int32,System.Int32,System.Int32)">
            <summary>
            ノートの音程を変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqCommand.generateCommandEventChangeClockAndNote(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            ノートの音程とクロックを変更するコマンドを発行します
            </summary>
            <param name="track"></param>
            <param name="internal_id"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.VsqEvent">
            <summary>
            vsqファイルのメタテキスト内に記述されるイベント。
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqEvent.InternalID">
            <summary>
            内部で使用するインスタンス固有のID
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqEvent.write(cadencii.vsq.ITextWriter)">
            <summary>
            インスタンスをテキストファイルに出力します
            </summary>
            <param name="sw">出力先</param>
        </member>
        <member name="M:cadencii.vsq.VsqEvent.clone">
            <summary>
            このオブジェクトのコピーを作成します
            </summary>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.VsqFile">
            <summary>
            VSQファイルの内容を保持するクラス
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqFile.MAX_TRACKS">
            <summary>
            マスタートラックを除いた，トラック総数の最大値
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqFile.Track">
            <summary>
            トラックのリスト．最初のトラックはMasterTrackであり，通常の音符が格納されるトラックはインデックス1以降となる
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqFile.TempoTable">
            <summary>
            テンポ情報を保持したテーブル
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqFile.TotalClocks">
            <summary>
            曲の長さを取得します。(クロック(4分音符は480クロック))
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getXmlElementName(System.String)">
            <summary>
            このクラスの指定した名前のプロパティをXMLシリアライズする際に使用する
            要素名を取得します．
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.adjustClockToMatchWith(cadencii.vsq.TempoVector)">
            <summary>
            VsqEvent, VsqBPListの全てのクロックを、tempoに格納されているテンポテーブルに
            合致するようにシフトします
            </summary>
            <param name="tempo"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.reflectPitch(cadencii.vsq.VsqFile,System.Int32,cadencii.vsq.VsqBPList)">
            <summary>
            master==MasterPitchControl.Pitchの場合、m_pitchからPITとPBSを再構成。
            master==MasterPitchControl.PITandPBSの場合、PITとPBSからm_pitchを再構成
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.checkPreSendTimeValidity(System.Int32)">
            <summary>
            プリセンドタイムの妥当性を判定します
            </summary>
            <param name="ms_pre_send_time"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.speedingUp(System.Double)">
            <summary>
            テンポ値を一律order倍します。
            </summary>
            <param name="order"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.executeCommand(cadencii.vsq.VsqCommand)">
            <summary>
            このインスタンスに編集を行うコマンドを実行します
            </summary>
            <param name="command">実行するコマンド</param>
            <returns>編集結果を元に戻すためのコマンドを返します</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.insertBlank(System.Int32,System.Int32)">
            <summary>
            指定した位置に，指定した量の空白を挿入します
            </summary>
            <param name="clock_start">空白を挿入する位置</param>
            <param name="clock_amount">挿入する空白の量</param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.removePart(System.Int32,System.Int32)">
            <summary>
            VSQファイルの指定されたクロック範囲のイベント等を削除します
            </summary>
            <param name="clock_start">削除を行う範囲の開始クロック</param>
            <param name="clock_end">削除を行う範囲の終了クロック</param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.shift(cadencii.vsq.VsqFile,System.Int32)">
            <summary>
            vsqファイル全体のイベントを，指定したクロックだけ遅らせます．
            ただし，曲頭のテンポ変更イベントと歌手変更イベントはクロック0から移動しません．
            この操作を行うことで，TimesigTableの情報は破綻します（仕様です）．
            </summary>
            <param name="delta_clock"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.clone">
            <summary>
            このインスタンスのコピーを作成します
            </summary>
            <returns>このインスタンスのコピー</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getBarLineIterator(System.Int32)">
            <summary>
            小節の区切りを順次返すIterator。
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getBaseTempo">
            <summary>
            基本テンポ値を取得します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getPreMeasure">
            <summary>
            プリメジャー値を取得します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getPreMeasureClocks">
            <summary>
            プリメジャー部分の長さをクロックに変換した値を取得します．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.calculatePreMeasureInClock">
            <summary>
            プリメジャーの長さ(クロック)を計算します。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getSecFromClock(System.Double)">
            <summary>
            指定したクロックにおける、clock=0からの演奏経過時間(sec)を取得します
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getClockFromSec(System.Double)">
            <summary>
            指定した時刻における、クロックを取得します
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getTimesigAt(System.Int32)">
            <summary>
            指定したクロックにおける拍子を取得します
            </summary>
            <param name="clock"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getTempoAt(System.Int32)">
            <summary>
            指定したクロックにおけるテンポを取得します。
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getClockFromBarCount(System.Int32)">
            <summary>
            指定した小節の開始クロックを調べます。ここで使用する小節数は、プリメジャーを考慮しない。即ち、曲頭の小節が0である。
            </summary>
            <param name="bar_count"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getBarCountFromClock(System.Int32)">
            <summary>
            指定したクロックが、曲頭から何小節目に属しているかを調べます。ここで使用する小節数は、プリメジャーを考慮しない。即ち、曲頭の小節が0である。
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getTickPerQuarter">
            <summary>
            4分の1拍子1音あたりのクロック数を取得します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            空のvsqファイルを構築します
            </summary>
            <param name="pre_measure"></param>
            <param name="numerator"></param>
            <param name="denominator"></param>
            <param name="tempo"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.#ctor(System.String,System.String)">
            <summary>
            vsqファイルからのコンストラクタ
            </summary>
            <param name="_fpath"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.updateTimesigInfo">
            <summary>
            TimeSigTableの[*].Clockの部分を更新します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.updateTempoInfo">
            <summary>
            TempoTableの[*].Timeの部分を更新します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.updateTotalClocks">
            <summary>
            VsqFile.Executeの実行直後などに、m_total_clocksの値を更新する
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getTotalSec">
            <summary>
            曲の長さを取得する。(sec)
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqFile.printLyricTable(System.Int32,System.String)">
            <summary>
            指定された番号のトラックに含まれる歌詞を指定されたファイルに出力します
            </summary>
            <param name="track"></param>
            <param name="fpath"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.substring127Bytes(System.String,System.String)">
            <summary>
            文字列sの先頭から文字列を切り取るとき，切り取った文字列をencodingによりエンコードした結果が127Byte以下になるように切り取ります．
            </summary>
            <param name="s"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getPresendClockAt(System.Int32,System.Int32)">
            <summary>
            指定したクロックにおけるプリセンド・クロックを取得します
            </summary>
            <param name="clock"></param>
            <param name="msPreSend"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getMaximumNoteLengthAt(System.Int32)">
            <summary>
            指定したクロックにおける、音符長さ(ゲートタイム単位)の最大値を調べます
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateExpressionNRPN(cadencii.vsq.VsqFile,System.Int32,System.Int32)">
            <summary>
            指定したトラックから、Expression(DYN)のNRPNリストを作成します
            </summary>
            <param name="track"></param>
            <param name="msPreSend"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateHeaderNRPN">
            <summary>
            先頭に記録されるNRPNを作成します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateSingerNRPN(cadencii.vsq.VsqFile,cadencii.vsq.VsqEvent,System.Int32)">
            <summary>
            歌手変更イベントから，NRPNを作成します
            </summary>
            <param name="vsq"></param>
            <param name="ve"></param>
            <param name="msPreSend"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateNoteNRPN(cadencii.vsq.VsqFile,System.Int32,cadencii.vsq.VsqEvent,System.Int32,System.Byte,System.Boolean)">
            <summary>
            音符イベントから，NRPNを作成します
            </summary>
            <param name="vsq"></param>
            <param name="track"></param>
            <param name="ve"></param>
            <param name="msPreSend"></param>
            <param name="note_loc"></param>
            <param name="add_delay_sign"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateNRPN(cadencii.vsq.VsqFile,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            指定したシーケンスのデータから、指定したゲートタイム区間のNRPNのリストを作成します
            </summary>
            <param name="vsq">作成元のシーケンス</param>
            <param name="track">トラック番号</param>
            <param name="msPreSend">プリセンド値(ミリ秒)</param>
            <param name="clock_start">リストの作成区間の開始ゲートタイム</param>
            <param name="clock_end">リストの作成区間の終了ゲートタイム</param>
            <returns>NRPNのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateNRPN(cadencii.vsq.VsqFile,System.Int32,System.Int32)">
            <summary>
            指定したシーケンスのデータから、NRPNのリストを作成します
            </summary>
            <param name="vsq">作成元のシーケンス</param>
            <param name="track">トラック番号</param>
            <param name="msPreSend">プリセンド値(ミリ秒)</param>
            <returns>NRPNのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generatePitchBendNRPN(cadencii.vsq.VsqFile,System.Int32,System.Int32)">
            <summary>
            指定したトラックから、PitchBendのNRPNを作成します
            </summary>
            <param name="vsq">作成元のシーケンス</param>
            <param name="track">トラック番号</param>
            <param name="msPreSend">プリセンド値(ミリ秒)</param>
            <returns>NRPNのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generatePitchBendSensitivityNRPN(cadencii.vsq.VsqFile,System.Int32,System.Int32)">
            <summary>
            指定したトラックから、PitchBendSensitivityのNRPNを作成します
            </summary>
            <param name="vsq">作成元のシーケンス</param>
            <param name="track">トラック番号</param>
            <param name="msPreSend">プリセンド値(ミリ秒)</param>
            <returns>NRPNのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateVibratoNRPN(cadencii.vsq.VsqFile,cadencii.vsq.VsqEvent,System.Int32)">
            <summary>
            指定した音符イベントから、ビブラート出力用のNRPNのリストを作成します
            </summary>
            <param name="vsq">作成元のシーケンス</param>
            <param name="ve">作成元の音符イベント</param>
            <param name="msPreSend">プリセンド値(ミリ秒)</param>
            <returns>NRPNのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateVoiceChangeParameterNRPN(cadencii.vsq.VsqFile,System.Int32,System.Int32)">
            <summary>
            指定したシーケンスから、VoiceChangeParameterのNRPNのリストを作成します
            </summary>
            <param name="vsq">作成元のシーケンス</param>
            <param name="track">トラック番号</param>
            <param name="msPreSend">プリセンド値(ミリ秒)</param>
            <returns>NRPNのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getMsbAndLsb(System.Int32)">
            <summary>
            指定した整数のMSBとLSBを計算します
            </summary>
            <param name="value">整数値</param>
            <returns>キーがMSB、値がLSBとなるペア値</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateTimeSig">
            <summary>
            このシーケンスが保持している拍子変更を元に、MIDIイベントリストを作成します
            </summary>
            <returns>MIDIイベントのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.generateTempoChange">
            <summary>
            このシーケンスが保持しているテンポ変更を元に、MIDIイベントリストを作成します
            </summary>
            <returns>MIDIイベントのリスト</returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.write(System.String)">
            <summary>
            このインスタンスをファイルに出力します
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.write(System.String,System.Int32,System.String)">
            <summary>
            このインスタンスをファイルに出力します
            </summary>
            <param name="file"></param>
            <param name="msPreSend">プリセンドタイム(msec)</param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getLinePrefix(System.Int32)">
            <summary>
            メタテキストの行番号から、各行先頭のプレフィクス文字列("DM:0123:"等)を作成します
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getHowManyDigits(System.Int32)">
            <summary>
            数numberの桁数を調べます。（10進数のみ）
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqFile.writeCharArray(cadencii.java.io.RandomAccessFile,System.Char[])">
            <summary>
            char[]を書き込む。
            </summary>
            <param name="fs"></param>
            <param name="item"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.writeUnsignedShort(cadencii.java.io.RandomAccessFile,System.Int32)">
            <summary>
            ushort値をビッグエンディアンでfsに書き込みます
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.writeUnsignedInt(cadencii.java.io.RandomAccessFile,System.Int64)">
            <summary>
            uint値をビッグエンディアンでfsに書き込みます
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.getBytesFlexibleLengthUnsignedLong(System.Int64)">
            <summary>
            SMFの可変長数値表現を使って、ulongをbyte[]に変換します
            </summary>
            <param name="number"></param>
        </member>
        <member name="M:cadencii.vsq.VsqFile.writeFlexibleLengthUnsignedLong(cadencii.java.io.RandomAccessFile,System.Int64)">
            <summary>
            整数を書き込む。フォーマットはSMFの可変長数値表現。
            </summary>
            <param name="fs"></param>
            <param name="number"></param>
        </member>
        <member name="T:cadencii.vsq.VsqNote">
            <summary>
            音階を表現するためのクラス
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqNote.Value">
            <summary>
            このインスタンスが表す音階のノート値
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqNote.#ctor(System.Int32)">
            <summary>
            音階のノート値からのコンストラクタ。
            </summary>
            <param name="note">この音階を初期化するためのノート値</param>
        </member>
        <member name="M:cadencii.vsq.VsqNote.isWhiteKey">
            <summary>
            このインスタンスが表す音階が、ピアノの白鍵かどうかを返します
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqNote.isNoteWhiteKey(System.Int32)">
            <summary>
            指定した音階が、ピアノの白鍵かどうかを返します
            </summary>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqNote.getNoteAlter(System.Int32)">
            <summary>
            C#4なら+1, C4なら0, Cb4なら-1
            </summary>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqNote.getNoteOctave(System.Int32)">
            <summary>
            ノート#のオクターブ部分の表記を調べます．
            例：C4 => 4, D#4 => 4
            </summary>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqNote.getNoteStringBase(System.Int32)">
            <summary>
            ノートのオクターブ，変化記号を除いた部分の文字列表記を調べます．
            例：C4 => "C", D#4 => "D"
            </summary>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.VsqPhoneticSymbol">
            <summary>
            VSQで使用される発音記号の種類や有効性を判定するユーティリティ群です。
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqPhoneticSymbol.isConsonant(System.String)">
            <summary>
            指定した文字列が子音を表す発音記号かどうかを判定します。
            </summary>
            <param name="symbol"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqPhoneticSymbol.isValidSymbol(System.String)">
            <summary>
            指定した文字列が発音記号として有効かどうかを判定します。
            </summary>
            <param name="symbol"></param>
            <returns></returns>
        </member>
        <member name="T:cadencii.vsq.VsqTrack">
            <summary>
            Stores the data of a vsq track.
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.insertBlank(System.Int32,System.Int32)">
            <summary>
            指定した位置に，指定した量の空白を挿入します
            </summary>
            <param name="clock_start">空白を挿入する位置</param>
            <param name="clock_amount">挿入する空白の量</param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.removePart(System.Int32,System.Int32)">
            <summary>
            このトラックの指定した範囲を削除し，削除範囲以降の部分を削除開始位置までシフトします
            </summary>
            <param name="clock_start"></param>
            <param name="clock_end"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.indexIterator(System.Int32)">
            <summary>
            指定された種類のイベントのインデクスを順に返すイテレータを取得します．
            </summary>
            <param name="iterator_kind"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getPlayMode">
            <summary>
            このトラックの再生モードを取得します．
            </summary>
            <returns>PlayMode.PlayAfterSynthまたはPlayMode.PlayWithSynth</returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.setPlayMode(System.Int32)">
            <summary>
            このトラックの再生モードを設定します．
            </summary>
            <param name="value">PlayMode.PlayAfterSynth, PlayMode.PlayWithSynth, またはPlayMode.Offのいずれかを指定します</param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.isTrackOn">
            <summary>
            このトラックがレンダリングされるかどうかを取得します．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.setTrackOn(System.Boolean)">
            <summary>
            このトラックがレンダリングされるかどうかを設定します，
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getName">
            <summary>
            このトラックの名前を取得します．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.setName(System.String)">
            <summary>
            このトラックの名前を設定します．
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getPitchAt(System.Int32)">
            <summary>
            このトラックの，指定したゲートタイムにおけるピッチベンドを取得します．単位はCentです．
            </summary>
            <param name="clock">ピッチベンドを取得するゲートタイム</param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.reflectDynamics">
            <summary>
            クレッシェンド，デクレッシェンド，および強弱記号をダイナミクスカーブに反映させます．
            この操作によって，ダイナミクスカーブに設定されたデータは全て削除されます．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getSingerEventAt(System.Int32)">
            <summary>
            指定したゲートタイムにおいて、歌唱を担当している歌手のVsqEventを取得します．
            </summary>
            <param name="clock"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.sortEvent">
            <summary>
            このトラックに設定されているイベントを，ゲートタイム順に並べ替えます．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getSingerEventIterator(System.Int32,System.Int32)">
            <summary>
            歌手変更イベントを，曲の先頭から順に返すIteratorを取得します．
            </summary>
            <param name="start">区間の開始時刻</param>
            <param name="end">区間の終了時刻</param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getNoteEventIterator">
            <summary>
            音符イベントを，曲の先頭から順に返すIteratorを取得します．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getDynamicsEventIterator">
            <summary>
            クレッシェンド，デクレッシェンド，および強弱記号を表すイベントを，曲の先頭から順に返すIteratorを取得します．
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.printMetaText(cadencii.vsq.ITextWriter,System.Int32,System.Int32)">
            <summary>
            このトラックのメタテキストをストリームに出力します．
            </summary>
            <param name="sw"></param>
            <param name="encode"></param>
            <param name="eos"></param>
            <param name="start"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.printMetaText(System.String,System.String)">
            <summary>
            このトラックのメタテキストを，指定されたファイルに出力します．
            </summary>
            <param name="file"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getMaster">
            <summary>
            このトラックのMasterを取得します．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.setMaster(cadencii.vsq.VsqMaster)">
            <summary>
            このトラックのMasterを設定します．
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getMixer">
            <summary>
            このトラックのMixerを取得します．
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.setMixer(cadencii.vsq.VsqMixer)">
            <summary>
            このトラックのMixerを設定します．
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getCommon">
            <summary>
            Commonを取得します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.changeRenderer(System.String,cadencii.java.util.Vector{cadencii.vsq.VsqID})">
            <summary>
            指定したトラックのレンダラーを変更します
            </summary>
            <param name="track"></param>
            <param name="new_renderer"></param>
            <param name="singers"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getCurve(System.String)">
            <summary>
            このトラックが保持している，指定されたカーブのBPListを取得します
            </summary>
            <param name="curve"></param>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.clone">
            <summary>
            このインスタンスのコピーを作成します
            </summary>
            <returns></returns>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Master Trackを構築
            </summary>
            <param name="tempo"></param>
            <param name="numerator"></param>
            <param name="denominator"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.#ctor(System.String,System.String)">
            <summary>
            Master Trackでないトラックを構築。
            </summary>
            <param name="name"></param>
            <param name="singer"></param>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.getLyricLength">
            <summary>
            歌詞の文字数を調べます
            </summary>
            <returns></returns>
        </member>
        <member name="P:cadencii.vsq.VsqTrack.Name">
            <summary>
            XMLシリアライズ用．このトラックの名前を設定します．
            </summary>
        </member>
        <member name="T:cadencii.vsq.VsqTrack.SingerEventIterator">
            <summary>
            歌手変更イベントの反復子
            </summary>
        </member>
        <member name="M:cadencii.vsq.VsqTrack.SingerEventIterator.#ctor(cadencii.vsq.VsqEventList,System.Int32,System.Int32)">
            <summary>
            イベントのリストと、反復する時間の区間を指定して初期化する。
            引数 start, end はそれぞれ「以上」、「以下」を意味する。
            </summary>
            <param name="list">イベントのリスト</param>
            <param name="start">区間の開始位置。省略可能。省略した場合は int.MinValue と見做される</param>
            <param name="end">区間の終了位置。省略可能。省略した場合は int.MaxValue と見做される</param>
        </member>
        <member name="T:cadencii.vsq.VsqVoiceLanguage">
            <summary>
            Represents the voice language of singer.
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqVoiceLanguage.Japanese">
            <summary>
            Japanese
            </summary>
        </member>
        <member name="F:cadencii.vsq.VsqVoiceLanguage.English">
            <summary>
            English
            </summary>
        </member>
    </members>
</doc>
